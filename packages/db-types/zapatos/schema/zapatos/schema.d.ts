/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2023 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 104 }


  /* === schema: public === */

  /* --- enums --- */
  /* (none) */

  /* --- tables --- */

  /**
   * **_authorigins**
   * - Table in database
   */
  export namespace _authorigins {
    export type Table = '_authorigins';
    export interface Selectable {
      /**
      * **_authorigins.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_authorigins.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_authorigins.fingerprint**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      fingerprint: string | null;
      /**
      * **_authorigins.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_authorigins.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_authorigins.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **_authorigins.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_authorigins.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_authorigins.fingerprint**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      fingerprint: string | null;
      /**
      * **_authorigins.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_authorigins.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_authorigins.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **_authorigins.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_authorigins.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_authorigins.fingerprint**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      fingerprint?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_authorigins.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_authorigins.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_authorigins.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_authorigins.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_authorigins.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_authorigins.fingerprint**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      fingerprint?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_authorigins.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_authorigins.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_authorigins.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_authorigins.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_authorigins.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_authorigins.fingerprint**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      fingerprint?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_authorigins.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_authorigins.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_authorigins.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20100_idx_authorigins_unique_pairs' | 'idx_20100_sqlite_autoindex__authorigins_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_collections**
   * - Table in database
   */
  export namespace _collections {
    export type Table = '_collections';
    export interface Selectable {
      /**
      * **_collections.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **_collections.createrule**
      * - `text` in database
      * - Nullable, no default
      */
      createrule: string | null;
      /**
      * **_collections.deleterule**
      * - `text` in database
      * - Nullable, no default
      */
      deleterule: string | null;
      /**
      * **_collections.fields**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      fields: db.JSONValue | null;
      /**
      * **_collections.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **_collections.indexes**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      indexes: db.JSONValue | null;
      /**
      * **_collections.listrule**
      * - `text` in database
      * - Nullable, no default
      */
      listrule: string | null;
      /**
      * **_collections.name**
      * - `text` in database
      * - Nullable, no default
      */
      name: string | null;
      /**
      * **_collections.options**
      * - `json` in database
      * - Nullable, default: `'"{}"'::json`
      */
      options: db.JSONValue | null;
      /**
      * **_collections.system**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      system: boolean | null;
      /**
      * **_collections.type**
      * - `text` in database
      * - Nullable, default: `'"base"'::text`
      */
      type: string | null;
      /**
      * **_collections.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **_collections.updaterule**
      * - `text` in database
      * - Nullable, no default
      */
      updaterule: string | null;
      /**
      * **_collections.viewrule**
      * - `text` in database
      * - Nullable, no default
      */
      viewrule: string | null;
    }
    export interface JSONSelectable {
      /**
      * **_collections.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **_collections.createrule**
      * - `text` in database
      * - Nullable, no default
      */
      createrule: string | null;
      /**
      * **_collections.deleterule**
      * - `text` in database
      * - Nullable, no default
      */
      deleterule: string | null;
      /**
      * **_collections.fields**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      fields: db.JSONValue | null;
      /**
      * **_collections.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **_collections.indexes**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      indexes: db.JSONValue | null;
      /**
      * **_collections.listrule**
      * - `text` in database
      * - Nullable, no default
      */
      listrule: string | null;
      /**
      * **_collections.name**
      * - `text` in database
      * - Nullable, no default
      */
      name: string | null;
      /**
      * **_collections.options**
      * - `json` in database
      * - Nullable, default: `'"{}"'::json`
      */
      options: db.JSONValue | null;
      /**
      * **_collections.system**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      system: boolean | null;
      /**
      * **_collections.type**
      * - `text` in database
      * - Nullable, default: `'"base"'::text`
      */
      type: string | null;
      /**
      * **_collections.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **_collections.updaterule**
      * - `text` in database
      * - Nullable, no default
      */
      updaterule: string | null;
      /**
      * **_collections.viewrule**
      * - `text` in database
      * - Nullable, no default
      */
      viewrule: string | null;
    }
    export interface Whereable {
      /**
      * **_collections.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.createrule**
      * - `text` in database
      * - Nullable, no default
      */
      createrule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.deleterule**
      * - `text` in database
      * - Nullable, no default
      */
      deleterule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.fields**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      fields?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.indexes**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      indexes?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.listrule**
      * - `text` in database
      * - Nullable, no default
      */
      listrule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.name**
      * - `text` in database
      * - Nullable, no default
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.options**
      * - `json` in database
      * - Nullable, default: `'"{}"'::json`
      */
      options?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.system**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      system?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.type**
      * - `text` in database
      * - Nullable, default: `'"base"'::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.updaterule**
      * - `text` in database
      * - Nullable, no default
      */
      updaterule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_collections.viewrule**
      * - `text` in database
      * - Nullable, no default
      */
      viewrule?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_collections.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.createrule**
      * - `text` in database
      * - Nullable, no default
      */
      createrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.deleterule**
      * - `text` in database
      * - Nullable, no default
      */
      deleterule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.fields**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      fields?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **_collections.indexes**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      indexes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.listrule**
      * - `text` in database
      * - Nullable, no default
      */
      listrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.name**
      * - `text` in database
      * - Nullable, no default
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.options**
      * - `json` in database
      * - Nullable, default: `'"{}"'::json`
      */
      options?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.system**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      system?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.type**
      * - `text` in database
      * - Nullable, default: `'"base"'::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.updaterule**
      * - `text` in database
      * - Nullable, no default
      */
      updaterule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_collections.viewrule**
      * - `text` in database
      * - Nullable, no default
      */
      viewrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_collections.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.createrule**
      * - `text` in database
      * - Nullable, no default
      */
      createrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.deleterule**
      * - `text` in database
      * - Nullable, no default
      */
      deleterule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.fields**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      fields?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **_collections.indexes**
      * - `json` in database
      * - Nullable, default: `'"[]"'::json`
      */
      indexes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.listrule**
      * - `text` in database
      * - Nullable, no default
      */
      listrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.name**
      * - `text` in database
      * - Nullable, no default
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.options**
      * - `json` in database
      * - Nullable, default: `'"{}"'::json`
      */
      options?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.system**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      system?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.type**
      * - `text` in database
      * - Nullable, default: `'"base"'::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.updaterule**
      * - `text` in database
      * - Nullable, no default
      */
      updaterule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_collections.viewrule**
      * - `text` in database
      * - Nullable, no default
      */
      viewrule?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_19512_sqlite_autoindex__collections_1' | 'idx_19512_sqlite_autoindex__collections_2';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_externalauths**
   * - Table in database
   */
  export namespace _externalauths {
    export type Table = '_externalauths';
    export interface Selectable {
      /**
      * **_externalauths.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_externalauths.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_externalauths.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_externalauths.provider**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      provider: string | null;
      /**
      * **_externalauths.providerid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      providerid: string | null;
      /**
      * **_externalauths.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_externalauths.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **_externalauths.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_externalauths.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_externalauths.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_externalauths.provider**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      provider: string | null;
      /**
      * **_externalauths.providerid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      providerid: string | null;
      /**
      * **_externalauths.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_externalauths.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **_externalauths.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.provider**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      provider?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.providerid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      providerid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_externalauths.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_externalauths.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.provider**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      provider?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.providerid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      providerid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_externalauths.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_externalauths.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.provider**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      provider?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.providerid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      providerid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_externalauths.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20065_idx_externalauths_collection_provider' | 'idx_20065_idx_externalauths_record_provider' | 'idx_20065_sqlite_autoindex__externalauths_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_litestream_lock**
   * - Table in database
   */
  export namespace _litestream_lock {
    export type Table = '_litestream_lock';
    export interface Selectable {
      /**
      * **_litestream_lock.id**
      * - `int8` in database
      * - Nullable, no default
      */
      id: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **_litestream_lock.id**
      * - `int8` in database
      * - Nullable, no default
      */
      id: number | null;
    }
    export interface Whereable {
      /**
      * **_litestream_lock.id**
      * - `int8` in database
      * - Nullable, no default
      */
      id?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_litestream_lock.id**
      * - `int8` in database
      * - Nullable, no default
      */
      id?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_litestream_lock.id**
      * - `int8` in database
      * - Nullable, no default
      */
      id?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_litestream_seq**
   * - Table in database
   */
  export namespace _litestream_seq {
    export type Table = '_litestream_seq';
    export interface Selectable {
      /**
      * **_litestream_seq.id**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      id: db.Int8String;
      /**
      * **_litestream_seq.seq**
      * - `int8` in database
      * - Nullable, no default
      */
      seq: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **_litestream_seq.id**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      id: number;
      /**
      * **_litestream_seq.seq**
      * - `int8` in database
      * - Nullable, no default
      */
      seq: number | null;
    }
    export interface Whereable {
      /**
      * **_litestream_seq.id**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      id?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_litestream_seq.seq**
      * - `int8` in database
      * - Nullable, no default
      */
      seq?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_litestream_seq.id**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      id: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment;
      /**
      * **_litestream_seq.seq**
      * - `int8` in database
      * - Nullable, no default
      */
      seq?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_litestream_seq.id**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      id?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment>;
      /**
      * **_litestream_seq.seq**
      * - `int8` in database
      * - Nullable, no default
      */
      seq?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20166__litestream_seq_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_mfas**
   * - Table in database
   */
  export namespace _mfas {
    export type Table = '_mfas';
    export interface Selectable {
      /**
      * **_mfas.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_mfas.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_mfas.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_mfas.method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      method: string | null;
      /**
      * **_mfas.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_mfas.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **_mfas.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_mfas.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_mfas.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_mfas.method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      method: string | null;
      /**
      * **_mfas.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_mfas.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **_mfas.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_mfas.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_mfas.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_mfas.method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_mfas.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_mfas.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_mfas.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_mfas.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_mfas.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_mfas.method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_mfas.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_mfas.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_mfas.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_mfas.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_mfas.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_mfas.method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_mfas.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_mfas.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20077_sqlite_autoindex__mfas_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_migrations**
   * - Table in database
   */
  export namespace _migrations {
    export type Table = '_migrations';
    export interface Selectable {
      /**
      * **_migrations.applied**
      * - `int8` in database
      * - Nullable, no default
      */
      applied: db.Int8String | null;
      /**
      * **_migrations.file**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      file: string;
    }
    export interface JSONSelectable {
      /**
      * **_migrations.applied**
      * - `int8` in database
      * - Nullable, no default
      */
      applied: number | null;
      /**
      * **_migrations.file**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      file: string;
    }
    export interface Whereable {
      /**
      * **_migrations.applied**
      * - `int8` in database
      * - Nullable, no default
      */
      applied?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_migrations.file**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_migrations.applied**
      * - `int8` in database
      * - Nullable, no default
      */
      applied?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_migrations.file**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      file: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_migrations.applied**
      * - `int8` in database
      * - Nullable, no default
      */
      applied?: (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String | bigint) | db.Parameter<(number | db.Int8String | bigint)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_migrations.file**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_19507_sqlite_autoindex__migrations_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_otps**
   * - Table in database
   */
  export namespace _otps {
    export type Table = '_otps';
    export interface Selectable {
      /**
      * **_otps.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_otps.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_otps.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_otps.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password: string | null;
      /**
      * **_otps.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_otps.sentto**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sentto: string | null;
      /**
      * **_otps.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **_otps.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref: string | null;
      /**
      * **_otps.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_otps.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_otps.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password: string | null;
      /**
      * **_otps.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref: string | null;
      /**
      * **_otps.sentto**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sentto: string | null;
      /**
      * **_otps.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **_otps.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.sentto**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sentto?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_otps.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_otps.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.sentto**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sentto?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_otps.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_otps.collectionref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      collectionref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.recordref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      recordref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.sentto**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sentto?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_otps.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20088_sqlite_autoindex__otps_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_params**
   * - Table in database
   */
  export namespace _params {
    export type Table = '_params';
    export interface Selectable {
      /**
      * **_params.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **_params.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_params.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **_params.value**
      * - `json` in database
      * - Nullable, no default
      */
      value: db.JSONValue | null;
    }
    export interface JSONSelectable {
      /**
      * **_params.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **_params.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_params.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **_params.value**
      * - `json` in database
      * - Nullable, no default
      */
      value: db.JSONValue | null;
    }
    export interface Whereable {
      /**
      * **_params.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_params.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_params.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_params.value**
      * - `json` in database
      * - Nullable, no default
      */
      value?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_params.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_params.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_params.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_params.value**
      * - `json` in database
      * - Nullable, no default
      */
      value?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_params.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_params.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_params.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_params.value**
      * - `json` in database
      * - Nullable, no default
      */
      value?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20057_sqlite_autoindex__params_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **_superusers**
   * - Table in database
   */
  export namespace _superusers {
    export type Table = '_superusers';
    export interface Selectable {
      /**
      * **_superusers.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_superusers.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email: string | null;
      /**
      * **_superusers.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility: boolean | null;
      /**
      * **_superusers.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_superusers.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password: string | null;
      /**
      * **_superusers.tokenkey**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      tokenkey: string | null;
      /**
      * **_superusers.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **_superusers.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified: boolean | null;
    }
    export interface JSONSelectable {
      /**
      * **_superusers.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **_superusers.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email: string | null;
      /**
      * **_superusers.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility: boolean | null;
      /**
      * **_superusers.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **_superusers.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password: string | null;
      /**
      * **_superusers.tokenkey**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      tokenkey: string | null;
      /**
      * **_superusers.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **_superusers.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified: boolean | null;
    }
    export interface Whereable {
      /**
      * **_superusers.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.tokenkey**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      tokenkey?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **_superusers.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **_superusers.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.tokenkey**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      tokenkey?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **_superusers.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **_superusers.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.password**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.tokenkey**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      tokenkey?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **_superusers.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_20034_idx_email_pbc_3142635823' | 'idx_20034_idx_tokenkey_pbc_3142635823' | 'idx_20034_sqlite_autoindex__superusers_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **account**
   * - Table in database
   */
  export namespace account {
    export type Table = 'account';
    export interface Selectable {
      /**
      * **account.accessToken**
      * - `text` in database
      * - Nullable, no default
      */
      accessToken: string | null;
      /**
      * **account.accessTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      accessTokenExpiresAt: Date | null;
      /**
      * **account.accountId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      accountId: string;
      /**
      * **account.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: Date;
      /**
      * **account.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **account.idToken**
      * - `text` in database
      * - Nullable, no default
      */
      idToken: string | null;
      /**
      * **account.password**
      * - `text` in database
      * - Nullable, no default
      */
      password: string | null;
      /**
      * **account.providerId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      providerId: string;
      /**
      * **account.refreshToken**
      * - `text` in database
      * - Nullable, no default
      */
      refreshToken: string | null;
      /**
      * **account.refreshTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      refreshTokenExpiresAt: Date | null;
      /**
      * **account.scope**
      * - `text` in database
      * - Nullable, no default
      */
      scope: string | null;
      /**
      * **account.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: Date;
      /**
      * **account.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string;
    }
    export interface JSONSelectable {
      /**
      * **account.accessToken**
      * - `text` in database
      * - Nullable, no default
      */
      accessToken: string | null;
      /**
      * **account.accessTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      accessTokenExpiresAt: db.TimestampString | null;
      /**
      * **account.accountId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      accountId: string;
      /**
      * **account.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: db.TimestampString;
      /**
      * **account.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **account.idToken**
      * - `text` in database
      * - Nullable, no default
      */
      idToken: string | null;
      /**
      * **account.password**
      * - `text` in database
      * - Nullable, no default
      */
      password: string | null;
      /**
      * **account.providerId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      providerId: string;
      /**
      * **account.refreshToken**
      * - `text` in database
      * - Nullable, no default
      */
      refreshToken: string | null;
      /**
      * **account.refreshTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      refreshTokenExpiresAt: db.TimestampString | null;
      /**
      * **account.scope**
      * - `text` in database
      * - Nullable, no default
      */
      scope: string | null;
      /**
      * **account.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: db.TimestampString;
      /**
      * **account.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string;
    }
    export interface Whereable {
      /**
      * **account.accessToken**
      * - `text` in database
      * - Nullable, no default
      */
      accessToken?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.accessTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      accessTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.accountId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      accountId?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.idToken**
      * - `text` in database
      * - Nullable, no default
      */
      idToken?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.providerId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      providerId?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.refreshToken**
      * - `text` in database
      * - Nullable, no default
      */
      refreshToken?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.refreshTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      refreshTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.scope**
      * - `text` in database
      * - Nullable, no default
      */
      scope?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **account.accessToken**
      * - `text` in database
      * - Nullable, no default
      */
      accessToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.accessTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      accessTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.accountId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      accountId: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **account.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **account.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **account.idToken**
      * - `text` in database
      * - Nullable, no default
      */
      idToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.providerId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      providerId: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **account.refreshToken**
      * - `text` in database
      * - Nullable, no default
      */
      refreshToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.refreshTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      refreshTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.scope**
      * - `text` in database
      * - Nullable, no default
      */
      scope?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **account.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **account.accessToken**
      * - `text` in database
      * - Nullable, no default
      */
      accessToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.accessTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      accessTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.accountId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      accountId?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **account.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **account.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **account.idToken**
      * - `text` in database
      * - Nullable, no default
      */
      idToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.providerId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      providerId?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **account.refreshToken**
      * - `text` in database
      * - Nullable, no default
      */
      refreshToken?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.refreshTokenExpiresAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      refreshTokenExpiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.scope**
      * - `text` in database
      * - Nullable, no default
      */
      scope?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **account.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'account_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **account_limit_history**
   * - Table in database
   */
  export namespace account_limit_history {
    export type Table = 'account_limit_history';
    export interface Selectable {
      /**
      * **account_limit_history.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **account_limit_history.agents_admin_data**
      * - `json` in database
      * - Nullable, no default
      */
      agents_admin_data: db.JSONValue | null;
      /**
      * **account_limit_history.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **account_limit_history.date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      date: string | null;
      /**
      * **account_limit_history.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **account_limit_history.message_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      message_limit: db.NumericString | null;
      /**
      * **account_limit_history.remaining_messages**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_messages: db.NumericString | null;
      /**
      * **account_limit_history.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **account_limit_history.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **account_limit_history.agents_admin_data**
      * - `json` in database
      * - Nullable, no default
      */
      agents_admin_data: db.JSONValue | null;
      /**
      * **account_limit_history.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **account_limit_history.date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      date: string | null;
      /**
      * **account_limit_history.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **account_limit_history.message_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      message_limit: number | null;
      /**
      * **account_limit_history.remaining_messages**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_messages: number | null;
      /**
      * **account_limit_history.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **account_limit_history.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.agents_admin_data**
      * - `json` in database
      * - Nullable, no default
      */
      agents_admin_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.message_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      message_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.remaining_messages**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_messages?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **account_limit_history.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **account_limit_history.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.agents_admin_data**
      * - `json` in database
      * - Nullable, no default
      */
      agents_admin_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.message_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      message_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.remaining_messages**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_messages?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **account_limit_history.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **account_limit_history.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.agents_admin_data**
      * - `json` in database
      * - Nullable, no default
      */
      agents_admin_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.message_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      message_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.remaining_messages**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_messages?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **account_limit_history.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255387_sqlite_autoindex_account_limit_history_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **accounts**
   * - Table in database
   */
  export namespace accounts {
    export type Table = 'accounts';
    export interface Selectable {
      /**
      * **accounts.access_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      access_token: string | null;
      /**
      * **accounts.address**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      address: string | null;
      /**
      * **accounts.agent_creation_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      agent_creation_limit: db.NumericString | null;
      /**
      * **accounts.allow_failed_retry_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      allow_failed_retry_campaigns: boolean | null;
      /**
      * **accounts.bank_info**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      bank_info: string | null;
      /**
      * **accounts.banned**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      banned: boolean | null;
      /**
      * **accounts.business_location**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      business_location: string | null;
      /**
      * **accounts.city**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      city: string | null;
      /**
      * **accounts.code_verification_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      code_verification_status: string | null;
      /**
      * **accounts.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **accounts.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **accounts.currency**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      currency: string | null;
      /**
      * **accounts.current_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      current_limit: string | null;
      /**
      * **accounts.display_phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      display_phone_number: string | null;
      /**
      * **accounts.event**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      event: string | null;
      /**
      * **accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **accounts.history_sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      history_sync_request_id: string | null;
      /**
      * **accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **accounts.is_on_biz_app**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_on_biz_app: boolean | null;
      /**
      * **accounts.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date: string | null;
      /**
      * **accounts.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date: string | null;
      /**
      * **accounts.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock: boolean | null;
      /**
      * **accounts.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo: string | null;
      /**
      * **accounts.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **accounts.old_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      old_limit: string | null;
      /**
      * **accounts.package_tier**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      package_tier: string | null;
      /**
      * **accounts.pb_user_id**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      pb_user_id: db.JSONValue | null;
      /**
      * **accounts.phone_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_id: string | null;
      /**
      * **accounts.platform_type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      platform_type: string | null;
      /**
      * **accounts.quality_rating**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      quality_rating: string | null;
      /**
      * **accounts.reconnect**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      reconnect: boolean | null;
      /**
      * **accounts.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit: db.NumericString | null;
      /**
      * **accounts.roles**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      roles: string | null;
      /**
      * **accounts.show_recent_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      show_recent_campaigns: boolean | null;
      /**
      * **accounts.stripe_customer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      stripe_customer_id: string | null;
      /**
      * **accounts.subscription_active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      subscription_active: boolean | null;
      /**
      * **accounts.sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sync_request_id: string | null;
      /**
      * **accounts.trn**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      trn: string | null;
      /**
      * **accounts.two_factor**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      two_factor: boolean | null;
      /**
      * **accounts.unutilized_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unutilized_limit: db.NumericString | null;
      /**
      * **accounts.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **accounts.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **accounts.waba_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      waba_id: string | null;
    }
    export interface JSONSelectable {
      /**
      * **accounts.access_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      access_token: string | null;
      /**
      * **accounts.address**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      address: string | null;
      /**
      * **accounts.agent_creation_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      agent_creation_limit: number | null;
      /**
      * **accounts.allow_failed_retry_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      allow_failed_retry_campaigns: boolean | null;
      /**
      * **accounts.bank_info**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      bank_info: string | null;
      /**
      * **accounts.banned**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      banned: boolean | null;
      /**
      * **accounts.business_location**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      business_location: string | null;
      /**
      * **accounts.city**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      city: string | null;
      /**
      * **accounts.code_verification_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      code_verification_status: string | null;
      /**
      * **accounts.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **accounts.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **accounts.currency**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      currency: string | null;
      /**
      * **accounts.current_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      current_limit: string | null;
      /**
      * **accounts.display_phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      display_phone_number: string | null;
      /**
      * **accounts.event**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      event: string | null;
      /**
      * **accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **accounts.history_sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      history_sync_request_id: string | null;
      /**
      * **accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **accounts.is_on_biz_app**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_on_biz_app: boolean | null;
      /**
      * **accounts.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date: string | null;
      /**
      * **accounts.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date: string | null;
      /**
      * **accounts.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock: boolean | null;
      /**
      * **accounts.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo: string | null;
      /**
      * **accounts.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **accounts.old_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      old_limit: string | null;
      /**
      * **accounts.package_tier**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      package_tier: string | null;
      /**
      * **accounts.pb_user_id**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      pb_user_id: db.JSONValue | null;
      /**
      * **accounts.phone_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_id: string | null;
      /**
      * **accounts.platform_type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      platform_type: string | null;
      /**
      * **accounts.quality_rating**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      quality_rating: string | null;
      /**
      * **accounts.reconnect**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      reconnect: boolean | null;
      /**
      * **accounts.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit: number | null;
      /**
      * **accounts.roles**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      roles: string | null;
      /**
      * **accounts.show_recent_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      show_recent_campaigns: boolean | null;
      /**
      * **accounts.stripe_customer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      stripe_customer_id: string | null;
      /**
      * **accounts.subscription_active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      subscription_active: boolean | null;
      /**
      * **accounts.sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sync_request_id: string | null;
      /**
      * **accounts.trn**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      trn: string | null;
      /**
      * **accounts.two_factor**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      two_factor: boolean | null;
      /**
      * **accounts.unutilized_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unutilized_limit: number | null;
      /**
      * **accounts.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **accounts.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **accounts.waba_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      waba_id: string | null;
    }
    export interface Whereable {
      /**
      * **accounts.access_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      access_token?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.address**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.agent_creation_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      agent_creation_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.allow_failed_retry_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      allow_failed_retry_campaigns?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.bank_info**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      bank_info?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.banned**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      banned?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.business_location**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      business_location?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.city**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      city?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.code_verification_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      code_verification_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.currency**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      currency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.current_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      current_limit?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.display_phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      display_phone_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.event**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      event?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.history_sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      history_sync_request_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.is_on_biz_app**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_on_biz_app?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.old_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      old_limit?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.package_tier**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      package_tier?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.pb_user_id**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      pb_user_id?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.phone_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.platform_type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      platform_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.quality_rating**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      quality_rating?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.reconnect**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      reconnect?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.roles**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      roles?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.show_recent_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      show_recent_campaigns?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.stripe_customer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      stripe_customer_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.subscription_active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      subscription_active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sync_request_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.trn**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      trn?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.two_factor**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      two_factor?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.unutilized_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unutilized_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **accounts.waba_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      waba_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **accounts.access_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      access_token?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.address**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.agent_creation_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      agent_creation_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.allow_failed_retry_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      allow_failed_retry_campaigns?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.bank_info**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      bank_info?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.banned**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      banned?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.business_location**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      business_location?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.city**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.code_verification_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      code_verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.currency**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      currency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.current_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      current_limit?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.display_phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      display_phone_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.event**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      event?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.history_sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      history_sync_request_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.is_on_biz_app**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_on_biz_app?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.old_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      old_limit?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.package_tier**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      package_tier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.pb_user_id**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      pb_user_id?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.phone_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.platform_type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      platform_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.quality_rating**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      quality_rating?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.reconnect**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      reconnect?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.roles**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      roles?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.show_recent_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      show_recent_campaigns?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.stripe_customer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      stripe_customer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.subscription_active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      subscription_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sync_request_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.trn**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      trn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.two_factor**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      two_factor?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.unutilized_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unutilized_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **accounts.waba_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      waba_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **accounts.access_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      access_token?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.address**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      address?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.agent_creation_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      agent_creation_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.allow_failed_retry_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      allow_failed_retry_campaigns?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.bank_info**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      bank_info?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.banned**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      banned?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.business_location**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      business_location?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.city**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      city?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.code_verification_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      code_verification_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.currency**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      currency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.current_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      current_limit?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.display_phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      display_phone_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.event**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      event?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.history_sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      history_sync_request_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.is_on_biz_app**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_on_biz_app?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.old_limit**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      old_limit?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.package_tier**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      package_tier?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.pb_user_id**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      pb_user_id?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.phone_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.platform_type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      platform_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.quality_rating**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      quality_rating?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.reconnect**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      reconnect?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.roles**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      roles?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.show_recent_campaigns**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      show_recent_campaigns?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.stripe_customer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      stripe_customer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.subscription_active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      subscription_active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.sync_request_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      sync_request_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.trn**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      trn?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.two_factor**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      two_factor?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.unutilized_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unutilized_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **accounts.waba_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      waba_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255404_sqlite_autoindex_accounts_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **api_settings**
   * - Table in database
   */
  export namespace api_settings {
    export type Table = 'api_settings';
    export interface Selectable {
      /**
      * **api_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **api_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **api_settings.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **api_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **api_settings.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key: string | null;
      /**
      * **api_settings.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **api_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **api_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **api_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **api_settings.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **api_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **api_settings.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key: string | null;
      /**
      * **api_settings.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **api_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **api_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **api_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **api_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **api_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **api_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **api_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255457_sqlite_autoindex_api_settings_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **audios**
   * - Table in database
   */
  export namespace audios {
    export type Table = 'audios';
    export interface Selectable {
      /**
      * **audios.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **audios.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **audios.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **audios.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **audios.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **audios.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **audios.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **audios.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface JSONSelectable {
      /**
      * **audios.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **audios.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **audios.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **audios.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **audios.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **audios.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **audios.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **audios.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface Whereable {
      /**
      * **audios.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **audios.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **audios.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **audios.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **audios.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **audios.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **audios.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255474_sqlite_autoindex_audios_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **automation_templates**
   * - Table in database
   */
  export namespace automation_templates {
    export type Table = 'automation_templates';
    export interface Selectable {
      /**
      * **automation_templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **automation_templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **automation_templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **automation_templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **automation_templates.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **automation_templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **automation_templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **automation_templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **automation_templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **automation_templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **automation_templates.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **automation_templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **automation_templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automation_templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automation_templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automation_templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automation_templates.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automation_templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **automation_templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automation_templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automation_templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automation_templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **automation_templates.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automation_templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **automation_templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automation_templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automation_templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automation_templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **automation_templates.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automation_templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255495_sqlite_autoindex_automation_templates_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **automations**
   * - Table in database
   */
  export namespace automations {
    export type Table = 'automations';
    export interface Selectable {
      /**
      * **automations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **automations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **automations.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **automations.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **automations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **automations.isactive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      isactive: boolean | null;
      /**
      * **automations.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **automations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **automations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **automations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **automations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **automations.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **automations.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **automations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **automations.isactive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      isactive: boolean | null;
      /**
      * **automations.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **automations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **automations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **automations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.isactive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      isactive?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **automations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **automations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **automations.isactive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      isactive?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **automations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **automations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.isactive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      isactive?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **automations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255510_sqlite_autoindex_automations_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **campaigns**
   * - Table in database
   */
  export namespace campaigns {
    export type Table = 'campaigns';
    export interface Selectable {
      /**
      * **campaigns.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **campaigns.click_stats**
      * - `json` in database
      * - Nullable, no default
      */
      click_stats: db.JSONValue | null;
      /**
      * **campaigns.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **campaigns.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **campaigns.delivered_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      delivered_count: db.NumericString | null;
      /**
      * **campaigns.draft_url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      draft_url: string | null;
      /**
      * **campaigns.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **campaigns.leads_list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      leads_list: db.JSONValue | null;
      /**
      * **campaigns.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **campaigns.next_retry_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      next_retry_date: string | null;
      /**
      * **campaigns.opt_out_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      opt_out_count: db.NumericString | null;
      /**
      * **campaigns.read_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      read_count: db.NumericString | null;
      /**
      * **campaigns.reply_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      reply_count: db.NumericString | null;
      /**
      * **campaigns.retry_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retry_count: db.NumericString | null;
      /**
      * **campaigns.retry_performance**
      * - `json` in database
      * - Nullable, no default
      */
      retry_performance: db.JSONValue | null;
      /**
      * **campaigns.retry_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status: string | null;
      /**
      * **campaigns.retry_status_reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status_reason: string | null;
      /**
      * **campaigns.retrying**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      retrying: boolean | null;
      /**
      * **campaigns.scheduled_time**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      scheduled_time: string | null;
      /**
      * **campaigns.sent_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      sent_count: db.NumericString | null;
      /**
      * **campaigns.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **campaigns.stopped**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      stopped: boolean | null;
      /**
      * **campaigns.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **campaigns.total_messages_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_messages_count: db.NumericString | null;
      /**
      * **campaigns.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **campaigns.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **campaigns.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface JSONSelectable {
      /**
      * **campaigns.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **campaigns.click_stats**
      * - `json` in database
      * - Nullable, no default
      */
      click_stats: db.JSONValue | null;
      /**
      * **campaigns.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **campaigns.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **campaigns.delivered_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      delivered_count: number | null;
      /**
      * **campaigns.draft_url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      draft_url: string | null;
      /**
      * **campaigns.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **campaigns.leads_list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      leads_list: db.JSONValue | null;
      /**
      * **campaigns.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **campaigns.next_retry_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      next_retry_date: string | null;
      /**
      * **campaigns.opt_out_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      opt_out_count: number | null;
      /**
      * **campaigns.read_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      read_count: number | null;
      /**
      * **campaigns.reply_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      reply_count: number | null;
      /**
      * **campaigns.retry_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retry_count: number | null;
      /**
      * **campaigns.retry_performance**
      * - `json` in database
      * - Nullable, no default
      */
      retry_performance: db.JSONValue | null;
      /**
      * **campaigns.retry_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status: string | null;
      /**
      * **campaigns.retry_status_reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status_reason: string | null;
      /**
      * **campaigns.retrying**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      retrying: boolean | null;
      /**
      * **campaigns.scheduled_time**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      scheduled_time: string | null;
      /**
      * **campaigns.sent_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      sent_count: number | null;
      /**
      * **campaigns.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **campaigns.stopped**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      stopped: boolean | null;
      /**
      * **campaigns.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **campaigns.total_messages_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_messages_count: number | null;
      /**
      * **campaigns.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **campaigns.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **campaigns.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface Whereable {
      /**
      * **campaigns.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.click_stats**
      * - `json` in database
      * - Nullable, no default
      */
      click_stats?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.delivered_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      delivered_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.draft_url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      draft_url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.leads_list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      leads_list?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.next_retry_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      next_retry_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.opt_out_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      opt_out_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.read_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      read_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.reply_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      reply_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.retry_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retry_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.retry_performance**
      * - `json` in database
      * - Nullable, no default
      */
      retry_performance?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.retry_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.retry_status_reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status_reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.retrying**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      retrying?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.scheduled_time**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      scheduled_time?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.sent_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      sent_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.stopped**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      stopped?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.total_messages_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_messages_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **campaigns.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **campaigns.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.click_stats**
      * - `json` in database
      * - Nullable, no default
      */
      click_stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.delivered_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      delivered_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.draft_url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      draft_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.leads_list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      leads_list?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.next_retry_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      next_retry_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.opt_out_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      opt_out_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.read_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      read_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.reply_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      reply_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.retry_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retry_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.retry_performance**
      * - `json` in database
      * - Nullable, no default
      */
      retry_performance?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.retry_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.retry_status_reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.retrying**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      retrying?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.scheduled_time**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      scheduled_time?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.sent_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      sent_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.stopped**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      stopped?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.total_messages_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_messages_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **campaigns.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **campaigns.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.click_stats**
      * - `json` in database
      * - Nullable, no default
      */
      click_stats?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.delivered_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      delivered_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.draft_url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      draft_url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.leads_list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      leads_list?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.next_retry_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      next_retry_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.opt_out_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      opt_out_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.read_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      read_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.reply_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      reply_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.retry_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retry_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.retry_performance**
      * - `json` in database
      * - Nullable, no default
      */
      retry_performance?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.retry_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.retry_status_reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      retry_status_reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.retrying**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      retrying?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.scheduled_time**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      scheduled_time?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.sent_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      sent_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.stopped**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      stopped?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.total_messages_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_messages_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **campaigns.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255537_sqlite_autoindex_campaigns_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **catalogs**
   * - Table in database
   */
  export namespace catalogs {
    export type Table = 'catalogs';
    export interface Selectable {
      /**
      * **catalogs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **catalogs.body**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      body: string | null;
      /**
      * **catalogs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **catalogs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **catalogs.footer**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      footer: string | null;
      /**
      * **catalogs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **catalogs.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **catalogs.thumbnail_product_retailer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      thumbnail_product_retailer_id: string | null;
      /**
      * **catalogs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **catalogs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **catalogs.body**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      body: string | null;
      /**
      * **catalogs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **catalogs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **catalogs.footer**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      footer: string | null;
      /**
      * **catalogs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **catalogs.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **catalogs.thumbnail_product_retailer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      thumbnail_product_retailer_id: string | null;
      /**
      * **catalogs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **catalogs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.body**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      body?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.footer**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      footer?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.thumbnail_product_retailer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      thumbnail_product_retailer_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **catalogs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **catalogs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.body**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      body?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.footer**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      footer?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.thumbnail_product_retailer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      thumbnail_product_retailer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **catalogs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **catalogs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.body**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      body?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.footer**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      footer?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.thumbnail_product_retailer_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      thumbnail_product_retailer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **catalogs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255572_sqlite_autoindex_catalogs_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **conversation_campaign**
   * - Table in database
   */
  export namespace conversation_campaign {
    export type Table = 'conversation_campaign';
    export interface Selectable {
      /**
      * **conversation_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **conversation_campaign.conversation**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      conversation: string | null;
      /**
      * **conversation_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **conversation_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **conversation_campaign.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **conversation_campaign.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **conversation_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **conversation_campaign.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
    }
    export interface JSONSelectable {
      /**
      * **conversation_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **conversation_campaign.conversation**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      conversation: string | null;
      /**
      * **conversation_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **conversation_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **conversation_campaign.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **conversation_campaign.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **conversation_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **conversation_campaign.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
    }
    export interface Whereable {
      /**
      * **conversation_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.conversation**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      conversation?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversation_campaign.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **conversation_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.conversation**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      conversation?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversation_campaign.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **conversation_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.conversation**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      conversation?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversation_campaign.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255596_sqlite_autoindex_conversation_campaign_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **conversations**
   * - Table in database
   */
  export namespace conversations {
    export type Table = 'conversations';
    export interface Selectable {
      /**
      * **conversations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **conversations.assigned_agent**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      assigned_agent: string | null;
      /**
      * **conversations.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **conversations.chat_archive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_archive: boolean | null;
      /**
      * **conversations.chat_block**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_block: boolean | null;
      /**
      * **conversations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **conversations.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from: string | null;
      /**
      * **conversations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **conversations.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **conversations.notes**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notes: string | null;
      /**
      * **conversations.state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      state: string | null;
      /**
      * **conversations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **conversations.unread_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unread_count: db.NumericString | null;
      /**
      * **conversations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **conversations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **conversations.assigned_agent**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      assigned_agent: string | null;
      /**
      * **conversations.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **conversations.chat_archive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_archive: boolean | null;
      /**
      * **conversations.chat_block**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_block: boolean | null;
      /**
      * **conversations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **conversations.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from: string | null;
      /**
      * **conversations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **conversations.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **conversations.notes**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notes: string | null;
      /**
      * **conversations.state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      state: string | null;
      /**
      * **conversations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **conversations.unread_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unread_count: number | null;
      /**
      * **conversations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **conversations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.assigned_agent**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      assigned_agent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.chat_archive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_archive?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.chat_block**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_block?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.notes**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notes?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.unread_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unread_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **conversations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **conversations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.assigned_agent**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      assigned_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.chat_archive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_archive?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.chat_block**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_block?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.notes**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.unread_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unread_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **conversations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **conversations.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.assigned_agent**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      assigned_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.chat_archive**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_archive?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.chat_block**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      chat_block?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.notes**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notes?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.unread_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unread_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **conversations.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255614_sqlite_autoindex_conversations_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **country**
   * - Table in database
   */
  export namespace country {
    export type Table = 'country';
    export interface Selectable {
      /**
      * **country.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **country.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **country.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **country.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes: db.JSONValue | null;
      /**
      * **country.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **country.phone_code**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_code: string | null;
      /**
      * **country.phone_length**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      phone_length: db.NumericString | null;
      /**
      * **country.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **country.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **country.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **country.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **country.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes: db.JSONValue | null;
      /**
      * **country.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **country.phone_code**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_code: string | null;
      /**
      * **country.phone_length**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      phone_length: number | null;
      /**
      * **country.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **country.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.phone_code**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.phone_length**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      phone_length?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **country.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **country.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **country.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.phone_code**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.phone_length**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      phone_length?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **country.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **country.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **country.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.phone_code**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.phone_length**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      phone_length?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **country.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255648_sqlite_autoindex_country_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **documents**
   * - Table in database
   */
  export namespace documents {
    export type Table = 'documents';
    export interface Selectable {
      /**
      * **documents.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **documents.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **documents.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **documents.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **documents.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **documents.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **documents.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **documents.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **documents.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface JSONSelectable {
      /**
      * **documents.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **documents.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **documents.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **documents.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **documents.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **documents.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **documents.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **documents.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **documents.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface Whereable {
      /**
      * **documents.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **documents.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **documents.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **documents.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **documents.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **documents.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **documents.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255665_sqlite_autoindex_documents_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **images**
   * - Table in database
   */
  export namespace images {
    export type Table = 'images';
    export interface Selectable {
      /**
      * **images.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **images.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **images.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **images.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **images.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **images.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **images.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **images.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface JSONSelectable {
      /**
      * **images.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **images.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **images.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **images.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **images.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **images.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **images.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **images.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface Whereable {
      /**
      * **images.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **images.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **images.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **images.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **images.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **images.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **images.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **images.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255684_sqlite_autoindex_images_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **interactive_messages**
   * - Table in database
   */
  export namespace interactive_messages {
    export type Table = 'interactive_messages';
    export interface Selectable {
      /**
      * **interactive_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **interactive_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **interactive_messages.message**
      * - `json` in database
      * - Nullable, no default
      */
      message: db.JSONValue | null;
      /**
      * **interactive_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **interactive_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **interactive_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **interactive_messages.message**
      * - `json` in database
      * - Nullable, no default
      */
      message: db.JSONValue | null;
      /**
      * **interactive_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **interactive_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **interactive_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **interactive_messages.message**
      * - `json` in database
      * - Nullable, no default
      */
      message?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **interactive_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **interactive_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **interactive_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **interactive_messages.message**
      * - `json` in database
      * - Nullable, no default
      */
      message?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **interactive_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **interactive_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **interactive_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **interactive_messages.message**
      * - `json` in database
      * - Nullable, no default
      */
      message?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **interactive_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255707_sqlite_autoindex_interactive_messages_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **invoice**
   * - Table in database
   */
  export namespace invoice {
    export type Table = 'invoice';
    export interface Selectable {
      /**
      * **invoice.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **invoice.amount_due**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_due: db.NumericString | null;
      /**
      * **invoice.auto_renewal**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      auto_renewal: boolean | null;
      /**
      * **invoice.billing_months**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      billing_months: db.NumericString | null;
      /**
      * **invoice.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges: db.NumericString | null;
      /**
      * **invoice.completed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      completed: boolean | null;
      /**
      * **invoice.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **invoice.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **invoice.invoice_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      invoice_limit: db.NumericString | null;
      /**
      * **invoice.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf: string | null;
      /**
      * **invoice.invoice_valid_from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_valid_from: string | null;
      /**
      * **invoice.is_first_invoice**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_first_invoice: boolean | null;
      /**
      * **invoice.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status: string | null;
      /**
      * **invoice.renewal_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      renewal_date: string | null;
      /**
      * **invoice.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax: db.NumericString | null;
      /**
      * **invoice.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount: db.NumericString | null;
      /**
      * **invoice.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **invoice.wt_id**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      wt_id: db.NumericString | null;
    }
    export interface JSONSelectable {
      /**
      * **invoice.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **invoice.amount_due**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_due: number | null;
      /**
      * **invoice.auto_renewal**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      auto_renewal: boolean | null;
      /**
      * **invoice.billing_months**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      billing_months: number | null;
      /**
      * **invoice.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges: number | null;
      /**
      * **invoice.completed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      completed: boolean | null;
      /**
      * **invoice.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **invoice.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **invoice.invoice_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      invoice_limit: number | null;
      /**
      * **invoice.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf: string | null;
      /**
      * **invoice.invoice_valid_from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_valid_from: string | null;
      /**
      * **invoice.is_first_invoice**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_first_invoice: boolean | null;
      /**
      * **invoice.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status: string | null;
      /**
      * **invoice.renewal_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      renewal_date: string | null;
      /**
      * **invoice.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax: number | null;
      /**
      * **invoice.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount: number | null;
      /**
      * **invoice.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **invoice.wt_id**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      wt_id: number | null;
    }
    export interface Whereable {
      /**
      * **invoice.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.amount_due**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_due?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.auto_renewal**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      auto_renewal?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.billing_months**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      billing_months?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.completed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      completed?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.invoice_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      invoice_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.invoice_valid_from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_valid_from?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.is_first_invoice**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_first_invoice?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.renewal_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      renewal_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice.wt_id**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      wt_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **invoice.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.amount_due**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_due?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.auto_renewal**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      auto_renewal?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.billing_months**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      billing_months?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.completed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      completed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.invoice_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      invoice_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.invoice_valid_from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_valid_from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.is_first_invoice**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_first_invoice?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.renewal_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      renewal_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **invoice.wt_id**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      wt_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **invoice.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.amount_due**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_due?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.auto_renewal**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      auto_renewal?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.billing_months**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      billing_months?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.completed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      completed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.invoice_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      invoice_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.invoice_valid_from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_valid_from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.is_first_invoice**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_first_invoice?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.renewal_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      renewal_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **invoice.wt_id**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      wt_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255720_sqlite_autoindex_invoice_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **leads**
   * - Table in database
   */
  export namespace leads {
    export type Table = 'leads';
    export interface Selectable {
      /**
      * **leads.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **leads.active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      active: boolean | null;
      /**
      * **leads.blocked**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      blocked: boolean | null;
      /**
      * **leads.campaign_history**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      campaign_history: db.JSONValue | null;
      /**
      * **leads.country**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country: string | null;
      /**
      * **leads.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **leads.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **leads.flow_data**
      * - `json` in database
      * - Nullable, no default
      */
      flow_data: db.JSONValue | null;
      /**
      * **leads.flow_state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      flow_state: string | null;
      /**
      * **leads.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **leads.list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      list: db.JSONValue | null;
      /**
      * **leads.log_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_id: string | null;
      /**
      * **leads.meta**
      * - `json` in database
      * - Nullable, no default
      */
      meta: db.JSONValue | null;
      /**
      * **leads.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **leads.numbercode**
      * - `json` in database
      * - Nullable, no default
      */
      numbercode: db.JSONValue | null;
      /**
      * **leads.opt_out**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      opt_out: boolean | null;
      /**
      * **leads.phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_number: string | null;
      /**
      * **leads.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral: db.JSONValue | null;
      /**
      * **leads.replied**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      replied: db.JSONValue | null;
      /**
      * **leads.shopify_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      shopify_id: string | null;
      /**
      * **leads.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **leads.tags**
      * - `json` in database
      * - Nullable, no default
      */
      tags: db.JSONValue | null;
      /**
      * **leads.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **leads.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface JSONSelectable {
      /**
      * **leads.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **leads.active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      active: boolean | null;
      /**
      * **leads.blocked**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      blocked: boolean | null;
      /**
      * **leads.campaign_history**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      campaign_history: db.JSONValue | null;
      /**
      * **leads.country**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country: string | null;
      /**
      * **leads.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **leads.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **leads.flow_data**
      * - `json` in database
      * - Nullable, no default
      */
      flow_data: db.JSONValue | null;
      /**
      * **leads.flow_state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      flow_state: string | null;
      /**
      * **leads.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **leads.list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      list: db.JSONValue | null;
      /**
      * **leads.log_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_id: string | null;
      /**
      * **leads.meta**
      * - `json` in database
      * - Nullable, no default
      */
      meta: db.JSONValue | null;
      /**
      * **leads.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **leads.numbercode**
      * - `json` in database
      * - Nullable, no default
      */
      numbercode: db.JSONValue | null;
      /**
      * **leads.opt_out**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      opt_out: boolean | null;
      /**
      * **leads.phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_number: string | null;
      /**
      * **leads.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral: db.JSONValue | null;
      /**
      * **leads.replied**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      replied: db.JSONValue | null;
      /**
      * **leads.shopify_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      shopify_id: string | null;
      /**
      * **leads.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **leads.tags**
      * - `json` in database
      * - Nullable, no default
      */
      tags: db.JSONValue | null;
      /**
      * **leads.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **leads.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface Whereable {
      /**
      * **leads.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.blocked**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      blocked?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.campaign_history**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      campaign_history?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.country**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.flow_data**
      * - `json` in database
      * - Nullable, no default
      */
      flow_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.flow_state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      flow_state?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      list?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.log_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.meta**
      * - `json` in database
      * - Nullable, no default
      */
      meta?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.numbercode**
      * - `json` in database
      * - Nullable, no default
      */
      numbercode?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.opt_out**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      opt_out?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_number?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.replied**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      replied?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.shopify_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      shopify_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.tags**
      * - `json` in database
      * - Nullable, no default
      */
      tags?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **leads.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.blocked**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      blocked?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.campaign_history**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      campaign_history?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.country**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.flow_data**
      * - `json` in database
      * - Nullable, no default
      */
      flow_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.flow_state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      flow_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **leads.list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      list?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.log_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.meta**
      * - `json` in database
      * - Nullable, no default
      */
      meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.numbercode**
      * - `json` in database
      * - Nullable, no default
      */
      numbercode?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.opt_out**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      opt_out?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.replied**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      replied?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.shopify_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      shopify_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.tags**
      * - `json` in database
      * - Nullable, no default
      */
      tags?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **leads.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.active**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      active?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.blocked**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      blocked?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.campaign_history**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      campaign_history?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.country**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.flow_data**
      * - `json` in database
      * - Nullable, no default
      */
      flow_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.flow_state**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      flow_state?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.list**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      list?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.log_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.meta**
      * - `json` in database
      * - Nullable, no default
      */
      meta?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.numbercode**
      * - `json` in database
      * - Nullable, no default
      */
      numbercode?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.opt_out**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      opt_out?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.phone_number**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phone_number?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.replied**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      replied?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.shopify_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      shopify_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.tags**
      * - `json` in database
      * - Nullable, no default
      */
      tags?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255752_idx_bzgel9uwqm' | 'idx_255752_sqlite_autoindex_leads_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **leads_replied_campaign**
   * - Table in database
   */
  export namespace leads_replied_campaign {
    export type Table = 'leads_replied_campaign';
    export interface Selectable {
      /**
      * **leads_replied_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **leads_replied_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **leads_replied_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **leads_replied_campaign.lead**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      lead: string | null;
      /**
      * **leads_replied_campaign.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **leads_replied_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **leads_replied_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **leads_replied_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **leads_replied_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **leads_replied_campaign.lead**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      lead: string | null;
      /**
      * **leads_replied_campaign.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **leads_replied_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **leads_replied_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads_replied_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads_replied_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads_replied_campaign.lead**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      lead?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads_replied_campaign.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **leads_replied_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **leads_replied_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads_replied_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads_replied_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **leads_replied_campaign.lead**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      lead?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads_replied_campaign.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **leads_replied_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **leads_replied_campaign.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads_replied_campaign.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads_replied_campaign.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **leads_replied_campaign.lead**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      lead?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads_replied_campaign.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **leads_replied_campaign.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_255980_idx_gpjnrsn' | 'idx_255980_sqlite_autoindex_leads_replied_campaign_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **list_filters**
   * - Table in database
   */
  export namespace list_filters {
    export type Table = 'list_filters';
    export interface Selectable {
      /**
      * **list_filters.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **list_filters.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **list_filters.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **list_filters.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **list_filters.list_filter_object**
      * - `json` in database
      * - Nullable, no default
      */
      list_filter_object: db.JSONValue | null;
      /**
      * **list_filters.parse_string**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parse_string: string | null;
      /**
      * **list_filters.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **list_filters.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **list_filters.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **list_filters.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **list_filters.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **list_filters.list_filter_object**
      * - `json` in database
      * - Nullable, no default
      */
      list_filter_object: db.JSONValue | null;
      /**
      * **list_filters.parse_string**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parse_string: string | null;
      /**
      * **list_filters.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **list_filters.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.list_filter_object**
      * - `json` in database
      * - Nullable, no default
      */
      list_filter_object?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.parse_string**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parse_string?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **list_filters.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **list_filters.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.list_filter_object**
      * - `json` in database
      * - Nullable, no default
      */
      list_filter_object?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.parse_string**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parse_string?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **list_filters.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **list_filters.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.list_filter_object**
      * - `json` in database
      * - Nullable, no default
      */
      list_filter_object?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.parse_string**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parse_string?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **list_filters.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_256003_sqlite_autoindex_list_filters_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **lists**
   * - Table in database
   */
  export namespace lists {
    export type Table = 'lists';
    export interface Selectable {
      /**
      * **lists.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **lists.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **lists.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **lists.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **lists.list_filters**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      list_filters: string | null;
      /**
      * **lists.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **lists.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending: boolean | null;
      /**
      * **lists.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **lists.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **lists.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface JSONSelectable {
      /**
      * **lists.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **lists.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **lists.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **lists.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **lists.list_filters**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      list_filters: string | null;
      /**
      * **lists.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **lists.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending: boolean | null;
      /**
      * **lists.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **lists.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **lists.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface Whereable {
      /**
      * **lists.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.list_filters**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      list_filters?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lists.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **lists.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **lists.list_filters**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      list_filters?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **lists.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **lists.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.list_filters**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      list_filters?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **lists.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_256019_sqlite_autoindex_lists_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **logs**
   * - Table in database
   */
  export namespace logs {
    export type Table = 'logs';
    export interface Selectable {
      /**
      * **logs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **logs.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **logs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **logs.log_data**
      * - `json` in database
      * - Nullable, no default
      */
      log_data: db.JSONValue | null;
      /**
      * **logs.log_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_name: string | null;
      /**
      * **logs.number_of_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      number_of_leads: db.NumericString | null;
      /**
      * **logs.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending: boolean | null;
      /**
      * **logs.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **logs.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface JSONSelectable {
      /**
      * **logs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **logs.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **logs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **logs.log_data**
      * - `json` in database
      * - Nullable, no default
      */
      log_data: db.JSONValue | null;
      /**
      * **logs.log_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_name: string | null;
      /**
      * **logs.number_of_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      number_of_leads: number | null;
      /**
      * **logs.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending: boolean | null;
      /**
      * **logs.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **logs.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
    }
    export interface Whereable {
      /**
      * **logs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.log_data**
      * - `json` in database
      * - Nullable, no default
      */
      log_data?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.log_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.number_of_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      number_of_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **logs.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **logs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **logs.log_data**
      * - `json` in database
      * - Nullable, no default
      */
      log_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.log_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.number_of_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      number_of_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **logs.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **logs.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.log_data**
      * - `json` in database
      * - Nullable, no default
      */
      log_data?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.log_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      log_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.number_of_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      number_of_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.pending**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      pending?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **logs.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_256041_sqlite_autoindex_logs_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **message_logs**
   * - Table in database
   */
  export namespace message_logs {
    export type Table = 'message_logs';
    export interface Selectable {
      /**
      * **message_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **message_logs.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status: string | null;
      /**
      * **message_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **message_logs.message_body**
      * - `json` in database
      * - Nullable, no default
      */
      message_body: db.JSONValue | null;
      /**
      * **message_logs.message_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message_id: string | null;
      /**
      * **message_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **message_logs.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid: string | null;
    }
    export interface JSONSelectable {
      /**
      * **message_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **message_logs.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status: string | null;
      /**
      * **message_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **message_logs.message_body**
      * - `json` in database
      * - Nullable, no default
      */
      message_body: db.JSONValue | null;
      /**
      * **message_logs.message_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message_id: string | null;
      /**
      * **message_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **message_logs.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid: string | null;
    }
    export interface Whereable {
      /**
      * **message_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.message_body**
      * - `json` in database
      * - Nullable, no default
      */
      message_body?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.message_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **message_logs.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **message_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.message_body**
      * - `json` in database
      * - Nullable, no default
      */
      message_body?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.message_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **message_logs.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **message_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.message_body**
      * - `json` in database
      * - Nullable, no default
      */
      message_body?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.message_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **message_logs.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_256694_sqlite_autoindex_message_logs_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **messages**
   * - Table in database
   */
  export namespace messages {
    export type Table = 'messages';
    export interface Selectable {
      /**
      * **messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **messages.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **messages.convo_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      convo_id: string | null;
      /**
      * **messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **messages.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **messages.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status: string | null;
      /**
      * **messages.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error: string | null;
      /**
      * **messages.error_code**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      error_code: db.NumericString | null;
      /**
      * **messages.error_data**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error_data: string | null;
      /**
      * **messages.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **messages.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from: string | null;
      /**
      * **messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **messages.interactive_message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      interactive_message: string | null;
      /**
      * **messages.location**
      * - `json` in database
      * - Nullable, no default
      */
      location: db.JSONValue | null;
      /**
      * **messages.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **messages.reaction**
      * - `json` in database
      * - Nullable, no default
      */
      reaction: db.JSONValue | null;
      /**
      * **messages.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral: db.JSONValue | null;
      /**
      * **messages.replied_to**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      replied_to: string | null;
      /**
      * **messages.retried_attempts**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retried_attempts: db.NumericString | null;
      /**
      * **messages.system**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      system: string | null;
      /**
      * **messages.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **messages.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **messages.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **messages.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
      /**
      * **messages.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid: string | null;
    }
    export interface JSONSelectable {
      /**
      * **messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **messages.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign: string | null;
      /**
      * **messages.convo_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      convo_id: string | null;
      /**
      * **messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **messages.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **messages.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status: string | null;
      /**
      * **messages.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error: string | null;
      /**
      * **messages.error_code**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      error_code: number | null;
      /**
      * **messages.error_data**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error_data: string | null;
      /**
      * **messages.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **messages.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from: string | null;
      /**
      * **messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **messages.interactive_message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      interactive_message: string | null;
      /**
      * **messages.location**
      * - `json` in database
      * - Nullable, no default
      */
      location: db.JSONValue | null;
      /**
      * **messages.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message: string | null;
      /**
      * **messages.reaction**
      * - `json` in database
      * - Nullable, no default
      */
      reaction: db.JSONValue | null;
      /**
      * **messages.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral: db.JSONValue | null;
      /**
      * **messages.replied_to**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      replied_to: string | null;
      /**
      * **messages.retried_attempts**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retried_attempts: number | null;
      /**
      * **messages.system**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      system: string | null;
      /**
      * **messages.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template: string | null;
      /**
      * **messages.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **messages.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **messages.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
      /**
      * **messages.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid: string | null;
    }
    export interface Whereable {
      /**
      * **messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.convo_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      convo_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.error_code**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      error_code?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.error_data**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.interactive_message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      interactive_message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.location**
      * - `json` in database
      * - Nullable, no default
      */
      location?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.reaction**
      * - `json` in database
      * - Nullable, no default
      */
      reaction?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.replied_to**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      replied_to?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.retried_attempts**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retried_attempts?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.system**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      system?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.convo_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      convo_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.error_code**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      error_code?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.error_data**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **messages.interactive_message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      interactive_message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.location**
      * - `json` in database
      * - Nullable, no default
      */
      location?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.reaction**
      * - `json` in database
      * - Nullable, no default
      */
      reaction?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.replied_to**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      replied_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.retried_attempts**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retried_attempts?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.system**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      system?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.campaign**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      campaign?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.convo_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      convo_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.delivery_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      delivery_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.error_code**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      error_code?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.error_data**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.from**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      from?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.interactive_message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      interactive_message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.location**
      * - `json` in database
      * - Nullable, no default
      */
      location?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.message**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.reaction**
      * - `json` in database
      * - Nullable, no default
      */
      reaction?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.referral**
      * - `json` in database
      * - Nullable, no default
      */
      referral?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.replied_to**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      replied_to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.retried_attempts**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      retried_attempts?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.system**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      system?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.wamid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      wamid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_487831_sqlite_autoindex_messages_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **messaging_limit**
   * - Table in database
   */
  export namespace messaging_limit {
    export type Table = 'messaging_limit';
    export interface Selectable {
      /**
      * **messaging_limit.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **messaging_limit.assigned_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      assigned_limit: db.NumericString | null;
      /**
      * **messaging_limit.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **messaging_limit.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **messaging_limit.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date: string | null;
      /**
      * **messaging_limit.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date: string | null;
      /**
      * **messaging_limit.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period: string | null;
      /**
      * **messaging_limit.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit: db.NumericString | null;
      /**
      * **messaging_limit.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **messaging_limit.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
    }
    export interface JSONSelectable {
      /**
      * **messaging_limit.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **messaging_limit.assigned_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      assigned_limit: number | null;
      /**
      * **messaging_limit.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **messaging_limit.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **messaging_limit.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date: string | null;
      /**
      * **messaging_limit.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date: string | null;
      /**
      * **messaging_limit.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period: string | null;
      /**
      * **messaging_limit.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit: number | null;
      /**
      * **messaging_limit.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **messaging_limit.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user: string | null;
    }
    export interface Whereable {
      /**
      * **messaging_limit.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.assigned_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      assigned_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_limit.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **messaging_limit.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.assigned_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      assigned_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_limit.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **messaging_limit.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.assigned_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      assigned_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.limit_end_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_end_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.limit_start_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      limit_start_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.remaining_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      remaining_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_limit.user**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488791_sqlite_autoindex_messaging_limit_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **office_settings**
   * - Table in database
   */
  export namespace office_settings {
    export type Table = 'office_settings';
    export interface Selectable {
      /**
      * **office_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **office_settings.close_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      close_hours: string | null;
      /**
      * **office_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **office_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **office_settings.open_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      open_hours: string | null;
      /**
      * **office_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **office_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **office_settings.close_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      close_hours: string | null;
      /**
      * **office_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **office_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **office_settings.open_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      open_hours: string | null;
      /**
      * **office_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **office_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **office_settings.close_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      close_hours?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **office_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **office_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **office_settings.open_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      open_hours?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **office_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **office_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **office_settings.close_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      close_hours?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **office_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **office_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **office_settings.open_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      open_hours?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **office_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **office_settings.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **office_settings.close_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      close_hours?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **office_settings.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **office_settings.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **office_settings.open_hours**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      open_hours?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **office_settings.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488811_sqlite_autoindex_office_settings_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **packages_tier**
   * - Table in database
   */
  export namespace packages_tier {
    export type Table = 'packages_tier';
    export interface Selectable {
      /**
      * **packages_tier.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **packages_tier.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **packages_tier.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **packages_tier.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period: string | null;
      /**
      * **packages_tier.total_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_limit: db.NumericString | null;
      /**
      * **packages_tier.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **packages_tier.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **packages_tier.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **packages_tier.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **packages_tier.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **packages_tier.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period: string | null;
      /**
      * **packages_tier.total_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_limit: number | null;
      /**
      * **packages_tier.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **packages_tier.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **packages_tier.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.total_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **packages_tier.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **packages_tier.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.total_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **packages_tier.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **packages_tier.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.period**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      period?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.total_limit**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_limit?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **packages_tier.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488827_sqlite_autoindex_packages_tier_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **payment**
   * - Table in database
   */
  export namespace payment {
    export type Table = 'payment';
    export interface Selectable {
      /**
      * **payment.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **payment.amount_paid**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_paid: db.NumericString | null;
      /**
      * **payment.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges: db.NumericString | null;
      /**
      * **payment.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **payment.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **payment.invoice_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_id: string | null;
      /**
      * **payment.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref: string | null;
      /**
      * **payment.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status: string | null;
      /**
      * **payment.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax: db.NumericString | null;
      /**
      * **payment.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount: db.NumericString | null;
      /**
      * **payment.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **payment.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **payment.amount_paid**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_paid: number | null;
      /**
      * **payment.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges: number | null;
      /**
      * **payment.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **payment.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **payment.invoice_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_id: string | null;
      /**
      * **payment.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref: string | null;
      /**
      * **payment.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status: string | null;
      /**
      * **payment.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax: number | null;
      /**
      * **payment.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount: number | null;
      /**
      * **payment.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **payment.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.amount_paid**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_paid?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.invoice_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **payment.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **payment.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.amount_paid**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_paid?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **payment.invoice_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **payment.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **payment.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.amount_paid**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      amount_paid?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.charges**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      charges?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.invoice_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.payment_status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.tax**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      tax?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.unit_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      unit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **payment.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488844_sqlite_autoindex_payment_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **pending_contacts**
   * - Table in database
   */
  export namespace pending_contacts {
    export type Table = 'pending_contacts';
    export interface Selectable {
      /**
      * **pending_contacts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **pending_contacts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **pending_contacts.csv_file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      csv_file: string | null;
      /**
      * **pending_contacts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pending_contacts.listid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      listid: string | null;
      /**
      * **pending_contacts.logid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logid: string | null;
      /**
      * **pending_contacts.meta_info**
      * - `json` in database
      * - Nullable, no default
      */
      meta_info: db.JSONValue | null;
      /**
      * **pending_contacts.pending_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      pending_leads: db.NumericString | null;
      /**
      * **pending_contacts.total_items**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_items: db.NumericString | null;
      /**
      * **pending_contacts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **pending_contacts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **pending_contacts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **pending_contacts.csv_file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      csv_file: string | null;
      /**
      * **pending_contacts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pending_contacts.listid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      listid: string | null;
      /**
      * **pending_contacts.logid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logid: string | null;
      /**
      * **pending_contacts.meta_info**
      * - `json` in database
      * - Nullable, no default
      */
      meta_info: db.JSONValue | null;
      /**
      * **pending_contacts.pending_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      pending_leads: number | null;
      /**
      * **pending_contacts.total_items**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_items: number | null;
      /**
      * **pending_contacts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **pending_contacts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.csv_file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      csv_file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.listid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      listid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.logid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.meta_info**
      * - `json` in database
      * - Nullable, no default
      */
      meta_info?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.pending_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      pending_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.total_items**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_items?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_contacts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **pending_contacts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.csv_file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      csv_file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.listid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      listid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.logid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.meta_info**
      * - `json` in database
      * - Nullable, no default
      */
      meta_info?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.pending_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      pending_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.total_items**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_items?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_contacts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **pending_contacts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.csv_file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      csv_file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.listid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      listid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.logid**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logid?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.meta_info**
      * - `json` in database
      * - Nullable, no default
      */
      meta_info?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.pending_leads**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      pending_leads?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.total_items**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      total_items?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_contacts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488865_sqlite_autoindex_pending_contacts_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **pending_logs**
   * - Table in database
   */
  export namespace pending_logs {
    export type Table = 'pending_logs';
    export interface Selectable {
      /**
      * **pending_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **pending_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pending_logs.log**
      * - `json` in database
      * - Nullable, no default
      */
      log: db.JSONValue | null;
      /**
      * **pending_logs.pending_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      pending_id: string | null;
      /**
      * **pending_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **pending_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **pending_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pending_logs.log**
      * - `json` in database
      * - Nullable, no default
      */
      log: db.JSONValue | null;
      /**
      * **pending_logs.pending_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      pending_id: string | null;
      /**
      * **pending_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **pending_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_logs.log**
      * - `json` in database
      * - Nullable, no default
      */
      log?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_logs.pending_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      pending_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pending_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **pending_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **pending_logs.log**
      * - `json` in database
      * - Nullable, no default
      */
      log?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_logs.pending_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      pending_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pending_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **pending_logs.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_logs.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_logs.log**
      * - `json` in database
      * - Nullable, no default
      */
      log?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_logs.pending_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      pending_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pending_logs.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488908_sqlite_autoindex_pending_logs_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **pricing**
   * - Table in database
   */
  export namespace pricing {
    export type Table = 'pricing';
    export interface Selectable {
      /**
      * **pricing.authentication**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication: db.NumericString | null;
      /**
      * **pricing.authentication_international**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication_international: db.NumericString | null;
      /**
      * **pricing.country_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country_name: string | null;
      /**
      * **pricing.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **pricing.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pricing.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes: db.JSONValue | null;
      /**
      * **pricing.marketing**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      marketing: db.NumericString | null;
      /**
      * **pricing.meta_group_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      meta_group_name: string | null;
      /**
      * **pricing.service**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      service: db.NumericString | null;
      /**
      * **pricing.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **pricing.utility**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      utility: db.NumericString | null;
    }
    export interface JSONSelectable {
      /**
      * **pricing.authentication**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication: number | null;
      /**
      * **pricing.authentication_international**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication_international: number | null;
      /**
      * **pricing.country_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country_name: string | null;
      /**
      * **pricing.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **pricing.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **pricing.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes: db.JSONValue | null;
      /**
      * **pricing.marketing**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      marketing: number | null;
      /**
      * **pricing.meta_group_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      meta_group_name: string | null;
      /**
      * **pricing.service**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      service: number | null;
      /**
      * **pricing.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **pricing.utility**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      utility: number | null;
    }
    export interface Whereable {
      /**
      * **pricing.authentication**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.authentication_international**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication_international?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.country_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.marketing**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      marketing?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.meta_group_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      meta_group_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.service**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      service?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **pricing.utility**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      utility?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **pricing.authentication**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.authentication_international**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication_international?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.country_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.marketing**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      marketing?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.meta_group_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      meta_group_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.service**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      service?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **pricing.utility**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      utility?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **pricing.authentication**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.authentication_international**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      authentication_international?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.country_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      country_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.iso_codes**
      * - `json` in database
      * - Nullable, no default
      */
      iso_codes?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.marketing**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      marketing?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.meta_group_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      meta_group_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.service**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      service?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **pricing.utility**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      utility?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488924_sqlite_autoindex_pricing_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **roles**
   * - Table in database
   */
  export namespace roles {
    export type Table = 'roles';
    export interface Selectable {
      /**
      * **roles.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **roles.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **roles.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **roles.parent_role**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parent_role: string | null;
      /**
      * **roles.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **roles.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **roles.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **roles.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **roles.parent_role**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parent_role: string | null;
      /**
      * **roles.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **roles.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **roles.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **roles.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **roles.parent_role**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parent_role?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **roles.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **roles.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **roles.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **roles.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **roles.parent_role**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parent_role?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **roles.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **roles.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **roles.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **roles.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **roles.parent_role**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      parent_role?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **roles.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488944_sqlite_autoindex_roles_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **saved_messages**
   * - Table in database
   */
  export namespace saved_messages {
    export type Table = 'saved_messages';
    export interface Selectable {
      /**
      * **saved_messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **saved_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **saved_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **saved_messages.messages**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      messages: db.JSONValue | null;
      /**
      * **saved_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **saved_messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **saved_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **saved_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **saved_messages.messages**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      messages: db.JSONValue | null;
      /**
      * **saved_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **saved_messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **saved_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **saved_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **saved_messages.messages**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      messages?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **saved_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **saved_messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **saved_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **saved_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **saved_messages.messages**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      messages?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **saved_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **saved_messages.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **saved_messages.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **saved_messages.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **saved_messages.messages**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      messages?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **saved_messages.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488959_sqlite_autoindex_saved_messages_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **session**
   * - Table in database
   */
  export namespace session {
    export type Table = 'session';
    export interface Selectable {
      /**
      * **session.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: Date;
      /**
      * **session.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: Date;
      /**
      * **session.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **session.impersonatedBy**
      * - `text` in database
      * - Nullable, no default
      */
      impersonatedBy: string | null;
      /**
      * **session.ipAddress**
      * - `text` in database
      * - Nullable, no default
      */
      ipAddress: string | null;
      /**
      * **session.token**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      token: string;
      /**
      * **session.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: Date;
      /**
      * **session.userAgent**
      * - `text` in database
      * - Nullable, no default
      */
      userAgent: string | null;
      /**
      * **session.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string;
    }
    export interface JSONSelectable {
      /**
      * **session.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: db.TimestampString;
      /**
      * **session.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: db.TimestampString;
      /**
      * **session.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **session.impersonatedBy**
      * - `text` in database
      * - Nullable, no default
      */
      impersonatedBy: string | null;
      /**
      * **session.ipAddress**
      * - `text` in database
      * - Nullable, no default
      */
      ipAddress: string | null;
      /**
      * **session.token**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      token: string;
      /**
      * **session.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: db.TimestampString;
      /**
      * **session.userAgent**
      * - `text` in database
      * - Nullable, no default
      */
      userAgent: string | null;
      /**
      * **session.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string;
    }
    export interface Whereable {
      /**
      * **session.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.impersonatedBy**
      * - `text` in database
      * - Nullable, no default
      */
      impersonatedBy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.ipAddress**
      * - `text` in database
      * - Nullable, no default
      */
      ipAddress?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.token**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      token?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.userAgent**
      * - `text` in database
      * - Nullable, no default
      */
      userAgent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **session.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **session.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **session.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **session.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **session.impersonatedBy**
      * - `text` in database
      * - Nullable, no default
      */
      impersonatedBy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **session.ipAddress**
      * - `text` in database
      * - Nullable, no default
      */
      ipAddress?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **session.token**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      token: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **session.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **session.userAgent**
      * - `text` in database
      * - Nullable, no default
      */
      userAgent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **session.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **session.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **session.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **session.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **session.impersonatedBy**
      * - `text` in database
      * - Nullable, no default
      */
      impersonatedBy?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **session.ipAddress**
      * - `text` in database
      * - Nullable, no default
      */
      ipAddress?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **session.token**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      token?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **session.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **session.userAgent**
      * - `text` in database
      * - Nullable, no default
      */
      userAgent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **session.userId**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      userId?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'session_pkey' | 'session_token_key';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **shopify_accounts**
   * - Table in database
   */
  export namespace shopify_accounts {
    export type Table = 'shopify_accounts';
    export interface Selectable {
      /**
      * **shopify_accounts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **shopify_accounts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **shopify_accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **shopify_accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **shopify_accounts.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key: string | null;
      /**
      * **shopify_accounts.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **shopify_accounts.store_details**
      * - `json` in database
      * - Nullable, no default
      */
      store_details: db.JSONValue | null;
      /**
      * **shopify_accounts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **shopify_accounts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **shopify_accounts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **shopify_accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at: string | null;
      /**
      * **shopify_accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **shopify_accounts.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key: string | null;
      /**
      * **shopify_accounts.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **shopify_accounts.store_details**
      * - `json` in database
      * - Nullable, no default
      */
      store_details: db.JSONValue | null;
      /**
      * **shopify_accounts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **shopify_accounts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.store_details**
      * - `json` in database
      * - Nullable, no default
      */
      store_details?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_accounts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **shopify_accounts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.store_details**
      * - `json` in database
      * - Nullable, no default
      */
      store_details?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_accounts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **shopify_accounts.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.expires_at**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      expires_at?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.key**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      key?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.store_details**
      * - `json` in database
      * - Nullable, no default
      */
      store_details?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_accounts.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488975_sqlite_autoindex_shopify_accounts_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **shopify_orders**
   * - Table in database
   */
  export namespace shopify_orders {
    export type Table = 'shopify_orders';
    export interface Selectable {
      /**
      * **shopify_orders.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **shopify_orders.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **shopify_orders.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **shopify_orders.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf: string | null;
      /**
      * **shopify_orders.response_object**
      * - `json` in database
      * - Nullable, no default
      */
      response_object: db.JSONValue | null;
      /**
      * **shopify_orders.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **shopify_orders.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **shopify_orders.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **shopify_orders.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **shopify_orders.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf: string | null;
      /**
      * **shopify_orders.response_object**
      * - `json` in database
      * - Nullable, no default
      */
      response_object: db.JSONValue | null;
      /**
      * **shopify_orders.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **shopify_orders.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_orders.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_orders.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_orders.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_orders.response_object**
      * - `json` in database
      * - Nullable, no default
      */
      response_object?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **shopify_orders.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **shopify_orders.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_orders.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_orders.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_orders.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_orders.response_object**
      * - `json` in database
      * - Nullable, no default
      */
      response_object?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **shopify_orders.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **shopify_orders.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_orders.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_orders.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_orders.invoice_pdf**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_pdf?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_orders.response_object**
      * - `json` in database
      * - Nullable, no default
      */
      response_object?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **shopify_orders.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_488992_sqlite_autoindex_shopify_orders_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **sqlite_stat1**
   * - Table in database
   */
  export namespace sqlite_stat1 {
    export type Table = 'sqlite_stat1';
    export interface Selectable {
      /**
      * **sqlite_stat1.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx: string | null;
      /**
      * **sqlite_stat1.stat**
      * - `text` in database
      * - Nullable, no default
      */
      stat: string | null;
      /**
      * **sqlite_stat1.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl: string | null;
    }
    export interface JSONSelectable {
      /**
      * **sqlite_stat1.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx: string | null;
      /**
      * **sqlite_stat1.stat**
      * - `text` in database
      * - Nullable, no default
      */
      stat: string | null;
      /**
      * **sqlite_stat1.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl: string | null;
    }
    export interface Whereable {
      /**
      * **sqlite_stat1.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat1.stat**
      * - `text` in database
      * - Nullable, no default
      */
      stat?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat1.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **sqlite_stat1.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat1.stat**
      * - `text` in database
      * - Nullable, no default
      */
      stat?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat1.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **sqlite_stat1.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat1.stat**
      * - `text` in database
      * - Nullable, no default
      */
      stat?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat1.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **sqlite_stat4**
   * - Table in database
   */
  export namespace sqlite_stat4 {
    export type Table = 'sqlite_stat4';
    export interface Selectable {
      /**
      * **sqlite_stat4.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx: string | null;
      /**
      * **sqlite_stat4.ndlt**
      * - `text` in database
      * - Nullable, no default
      */
      ndlt: string | null;
      /**
      * **sqlite_stat4.neq**
      * - `text` in database
      * - Nullable, no default
      */
      neq: string | null;
      /**
      * **sqlite_stat4.nlt**
      * - `text` in database
      * - Nullable, no default
      */
      nlt: string | null;
      /**
      * **sqlite_stat4.sample**
      * - `text` in database
      * - Nullable, no default
      */
      sample: string | null;
      /**
      * **sqlite_stat4.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl: string | null;
    }
    export interface JSONSelectable {
      /**
      * **sqlite_stat4.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx: string | null;
      /**
      * **sqlite_stat4.ndlt**
      * - `text` in database
      * - Nullable, no default
      */
      ndlt: string | null;
      /**
      * **sqlite_stat4.neq**
      * - `text` in database
      * - Nullable, no default
      */
      neq: string | null;
      /**
      * **sqlite_stat4.nlt**
      * - `text` in database
      * - Nullable, no default
      */
      nlt: string | null;
      /**
      * **sqlite_stat4.sample**
      * - `text` in database
      * - Nullable, no default
      */
      sample: string | null;
      /**
      * **sqlite_stat4.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl: string | null;
    }
    export interface Whereable {
      /**
      * **sqlite_stat4.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat4.ndlt**
      * - `text` in database
      * - Nullable, no default
      */
      ndlt?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat4.neq**
      * - `text` in database
      * - Nullable, no default
      */
      neq?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat4.nlt**
      * - `text` in database
      * - Nullable, no default
      */
      nlt?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat4.sample**
      * - `text` in database
      * - Nullable, no default
      */
      sample?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sqlite_stat4.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **sqlite_stat4.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat4.ndlt**
      * - `text` in database
      * - Nullable, no default
      */
      ndlt?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat4.neq**
      * - `text` in database
      * - Nullable, no default
      */
      neq?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat4.nlt**
      * - `text` in database
      * - Nullable, no default
      */
      nlt?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat4.sample**
      * - `text` in database
      * - Nullable, no default
      */
      sample?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sqlite_stat4.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **sqlite_stat4.idx**
      * - `text` in database
      * - Nullable, no default
      */
      idx?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat4.ndlt**
      * - `text` in database
      * - Nullable, no default
      */
      ndlt?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat4.neq**
      * - `text` in database
      * - Nullable, no default
      */
      neq?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat4.nlt**
      * - `text` in database
      * - Nullable, no default
      */
      nlt?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat4.sample**
      * - `text` in database
      * - Nullable, no default
      */
      sample?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sqlite_stat4.tbl**
      * - `text` in database
      * - Nullable, no default
      */
      tbl?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **teams**
   * - Table in database
   */
  export namespace teams {
    export type Table = 'teams';
    export interface Selectable {
      /**
      * **teams.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **teams.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **teams.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **teams.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **teams.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **teams.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **teams.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **teams.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **teams.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **teams.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **teams.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **teams.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **teams.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **teams.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **teams.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **teams.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **teams.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **teams.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **teams.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **teams.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **teams.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **teams.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **teams.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **teams.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **teams.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489073_sqlite_autoindex_teams_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **templates**
   * - Table in database
   */
  export namespace templates {
    export type Table = 'templates';
    export interface Selectable {
      /**
      * **templates.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **templates.carousel_params**
      * - `json` in database
      * - Nullable, no default
      */
      carousel_params: db.JSONValue | null;
      /**
      * **templates.category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      category: string | null;
      /**
      * **templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **templates.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **templates.edit_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      edit_count: db.NumericString | null;
      /**
      * **templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **templates.header_asset_id**
      * - `json` in database
      * - Nullable, no default
      */
      header_asset_id: db.JSONValue | null;
      /**
      * **templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **templates.new_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      new_quality_score: string | null;
      /**
      * **templates.params**
      * - `json` in database
      * - Nullable, no default
      */
      params: db.JSONValue | null;
      /**
      * **templates.previous_category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_category: string | null;
      /**
      * **templates.previous_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_quality_score: string | null;
      /**
      * **templates.reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      reason: string | null;
      /**
      * **templates.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **templates.template_body**
      * - `json` in database
      * - Nullable, no default
      */
      template_body: db.JSONValue | null;
      /**
      * **templates.template_edit_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_edit_date: string | null;
      /**
      * **templates.template_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_id: string | null;
      /**
      * **templates.template_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_name: string | null;
      /**
      * **templates.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **templates.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **templates.updated_template**
      * - `json` in database
      * - Nullable, no default
      */
      updated_template: db.JSONValue | null;
    }
    export interface JSONSelectable {
      /**
      * **templates.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **templates.carousel_params**
      * - `json` in database
      * - Nullable, no default
      */
      carousel_params: db.JSONValue | null;
      /**
      * **templates.category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      category: string | null;
      /**
      * **templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **templates.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description: string | null;
      /**
      * **templates.edit_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      edit_count: number | null;
      /**
      * **templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow: db.JSONValue | null;
      /**
      * **templates.header_asset_id**
      * - `json` in database
      * - Nullable, no default
      */
      header_asset_id: db.JSONValue | null;
      /**
      * **templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **templates.new_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      new_quality_score: string | null;
      /**
      * **templates.params**
      * - `json` in database
      * - Nullable, no default
      */
      params: db.JSONValue | null;
      /**
      * **templates.previous_category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_category: string | null;
      /**
      * **templates.previous_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_quality_score: string | null;
      /**
      * **templates.reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      reason: string | null;
      /**
      * **templates.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status: string | null;
      /**
      * **templates.template_body**
      * - `json` in database
      * - Nullable, no default
      */
      template_body: db.JSONValue | null;
      /**
      * **templates.template_edit_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_edit_date: string | null;
      /**
      * **templates.template_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_id: string | null;
      /**
      * **templates.template_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_name: string | null;
      /**
      * **templates.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **templates.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by: string | null;
      /**
      * **templates.updated_template**
      * - `json` in database
      * - Nullable, no default
      */
      updated_template: db.JSONValue | null;
    }
    export interface Whereable {
      /**
      * **templates.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.carousel_params**
      * - `json` in database
      * - Nullable, no default
      */
      carousel_params?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      category?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.edit_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      edit_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.header_asset_id**
      * - `json` in database
      * - Nullable, no default
      */
      header_asset_id?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.new_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      new_quality_score?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.params**
      * - `json` in database
      * - Nullable, no default
      */
      params?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.previous_category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_category?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.previous_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_quality_score?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      reason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.template_body**
      * - `json` in database
      * - Nullable, no default
      */
      template_body?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.template_edit_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_edit_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.template_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.template_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **templates.updated_template**
      * - `json` in database
      * - Nullable, no default
      */
      updated_template?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **templates.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.carousel_params**
      * - `json` in database
      * - Nullable, no default
      */
      carousel_params?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      category?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.edit_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      edit_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.header_asset_id**
      * - `json` in database
      * - Nullable, no default
      */
      header_asset_id?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **templates.new_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      new_quality_score?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.params**
      * - `json` in database
      * - Nullable, no default
      */
      params?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.previous_category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_category?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.previous_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_quality_score?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.template_body**
      * - `json` in database
      * - Nullable, no default
      */
      template_body?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.template_edit_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_edit_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.template_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.template_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **templates.updated_template**
      * - `json` in database
      * - Nullable, no default
      */
      updated_template?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **templates.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.carousel_params**
      * - `json` in database
      * - Nullable, no default
      */
      carousel_params?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      category?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.description**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.edit_count**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      edit_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.flow**
      * - `json` in database
      * - Nullable, no default
      */
      flow?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.header_asset_id**
      * - `json` in database
      * - Nullable, no default
      */
      header_asset_id?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.new_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      new_quality_score?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.params**
      * - `json` in database
      * - Nullable, no default
      */
      params?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.previous_category**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_category?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.previous_quality_score**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      previous_quality_score?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.reason**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      reason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.status**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      status?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.template_body**
      * - `json` in database
      * - Nullable, no default
      */
      template_body?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.template_edit_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_edit_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.template_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.template_name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      template_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.updated_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **templates.updated_template**
      * - `json` in database
      * - Nullable, no default
      */
      updated_template?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489088_sqlite_autoindex_templates_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **third_party**
   * - Table in database
   */
  export namespace third_party {
    export type Table = 'third_party';
    export interface Selectable {
      /**
      * **third_party.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **third_party.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **third_party.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **third_party.invoice_template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_template: string | null;
      /**
      * **third_party.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo: string | null;
      /**
      * **third_party.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **third_party.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **third_party.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **third_party.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **third_party.invoice_template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_template: string | null;
      /**
      * **third_party.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo: string | null;
      /**
      * **third_party.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **third_party.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **third_party.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **third_party.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **third_party.invoice_template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **third_party.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **third_party.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **third_party.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **third_party.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **third_party.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **third_party.invoice_template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **third_party.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **third_party.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **third_party.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **third_party.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **third_party.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **third_party.invoice_template**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      invoice_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **third_party.logo**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      logo?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **third_party.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489164_sqlite_autoindex_third_party_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **transaction_log**
   * - Table in database
   */
  export namespace transaction_log {
    export type Table = 'transaction_log';
    export interface Selectable {
      /**
      * **transaction_log.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **transaction_log.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **transaction_log.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error: string | null;
      /**
      * **transaction_log.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **transaction_log.payment_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      payment_amount: db.NumericString | null;
      /**
      * **transaction_log.payment_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_id: string | null;
      /**
      * **transaction_log.payment_method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_method: string | null;
      /**
      * **transaction_log.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref: string | null;
      /**
      * **transaction_log.transaction_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      transaction_date: string | null;
      /**
      * **transaction_log.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **transaction_log.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id: string | null;
      /**
      * **transaction_log.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **transaction_log.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error: string | null;
      /**
      * **transaction_log.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **transaction_log.payment_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      payment_amount: number | null;
      /**
      * **transaction_log.payment_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_id: string | null;
      /**
      * **transaction_log.payment_method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_method: string | null;
      /**
      * **transaction_log.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref: string | null;
      /**
      * **transaction_log.transaction_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      transaction_date: string | null;
      /**
      * **transaction_log.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **transaction_log.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.payment_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      payment_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.payment_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.payment_method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_method?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.transaction_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      transaction_date?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transaction_log.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **transaction_log.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.payment_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      payment_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.payment_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.payment_method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.transaction_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      transaction_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transaction_log.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **transaction_log.account_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.error**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      error?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.payment_amount**
      * - `numeric` in database
      * - Nullable, default: `'0'::numeric`
      */
      payment_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.payment_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.payment_method**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_method?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.payment_ref**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      payment_ref?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.transaction_date**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      transaction_date?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transaction_log.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489180_sqlite_autoindex_transaction_log_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **user**
   * - Table in database
   */
  export namespace user {
    export type Table = 'user';
    export interface Selectable {
      /**
      * **user.banExpires**
      * - `timestamp` in database
      * - Nullable, no default
      */
      banExpires: Date | null;
      /**
      * **user.banReason**
      * - `text` in database
      * - Nullable, no default
      */
      banReason: string | null;
      /**
      * **user.banned**
      * - `bool` in database
      * - Nullable, no default
      */
      banned: boolean | null;
      /**
      * **user.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: Date;
      /**
      * **user.email**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      email: string;
      /**
      * **user.emailVerified**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      emailVerified: boolean;
      /**
      * **user.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **user.image**
      * - `text` in database
      * - Nullable, no default
      */
      image: string | null;
      /**
      * **user.name**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      name: string;
      /**
      * **user.role**
      * - `text` in database
      * - Nullable, no default
      */
      role: string | null;
      /**
      * **user.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: Date;
    }
    export interface JSONSelectable {
      /**
      * **user.banExpires**
      * - `timestamp` in database
      * - Nullable, no default
      */
      banExpires: db.TimestampString | null;
      /**
      * **user.banReason**
      * - `text` in database
      * - Nullable, no default
      */
      banReason: string | null;
      /**
      * **user.banned**
      * - `bool` in database
      * - Nullable, no default
      */
      banned: boolean | null;
      /**
      * **user.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: db.TimestampString;
      /**
      * **user.email**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      email: string;
      /**
      * **user.emailVerified**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      emailVerified: boolean;
      /**
      * **user.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **user.image**
      * - `text` in database
      * - Nullable, no default
      */
      image: string | null;
      /**
      * **user.name**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      name: string;
      /**
      * **user.role**
      * - `text` in database
      * - Nullable, no default
      */
      role: string | null;
      /**
      * **user.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: db.TimestampString;
    }
    export interface Whereable {
      /**
      * **user.banExpires**
      * - `timestamp` in database
      * - Nullable, no default
      */
      banExpires?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.banReason**
      * - `text` in database
      * - Nullable, no default
      */
      banReason?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.banned**
      * - `bool` in database
      * - Nullable, no default
      */
      banned?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.email**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.emailVerified**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      emailVerified?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.image**
      * - `text` in database
      * - Nullable, no default
      */
      image?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.name**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.role**
      * - `text` in database
      * - Nullable, no default
      */
      role?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **user.banExpires**
      * - `timestamp` in database
      * - Nullable, no default
      */
      banExpires?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user.banReason**
      * - `text` in database
      * - Nullable, no default
      */
      banReason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user.banned**
      * - `bool` in database
      * - Nullable, no default
      */
      banned?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **user.email**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      email: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **user.emailVerified**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      emailVerified: boolean | db.Parameter<boolean> | db.SQLFragment;
      /**
      * **user.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **user.image**
      * - `text` in database
      * - Nullable, no default
      */
      image?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user.name**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      name: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **user.role**
      * - `text` in database
      * - Nullable, no default
      */
      role?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **user.banExpires**
      * - `timestamp` in database
      * - Nullable, no default
      */
      banExpires?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user.banReason**
      * - `text` in database
      * - Nullable, no default
      */
      banReason?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user.banned**
      * - `bool` in database
      * - Nullable, no default
      */
      banned?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user.createdAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **user.email**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      email?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **user.emailVerified**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      emailVerified?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
      /**
      * **user.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **user.image**
      * - `text` in database
      * - Nullable, no default
      */
      image?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user.name**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **user.role**
      * - `text` in database
      * - Nullable, no default
      */
      role?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user.updatedAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
    }
    export type UniqueIndex = 'user_email_key' | 'user_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **user_bank_session**
   * - Table in database
   */
  export namespace user_bank_session {
    export type Table = 'user_bank_session';
    export interface Selectable {
      /**
      * **user_bank_session.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **user_bank_session.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **user_bank_session.is_bank_user**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_bank_user: boolean | null;
      /**
      * **user_bank_session.session_expiry**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_expiry: string | null;
      /**
      * **user_bank_session.session_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_token: string | null;
      /**
      * **user_bank_session.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **user_bank_session.user_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user_id: string | null;
    }
    export interface JSONSelectable {
      /**
      * **user_bank_session.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created: string | null;
      /**
      * **user_bank_session.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **user_bank_session.is_bank_user**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_bank_user: boolean | null;
      /**
      * **user_bank_session.session_expiry**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_expiry: string | null;
      /**
      * **user_bank_session.session_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_token: string | null;
      /**
      * **user_bank_session.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated: string | null;
      /**
      * **user_bank_session.user_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user_id: string | null;
    }
    export interface Whereable {
      /**
      * **user_bank_session.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.is_bank_user**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_bank_user?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.session_expiry**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_expiry?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.session_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_token?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **user_bank_session.user_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **user_bank_session.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.is_bank_user**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_bank_user?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.session_expiry**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_expiry?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.session_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_token?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **user_bank_session.user_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **user_bank_session.created**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.is_bank_user**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      is_bank_user?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.session_expiry**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_expiry?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.session_token**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      session_token?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.updated**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **user_bank_session.user_id**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      user_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489203_sqlite_autoindex_user_bank_session_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **users**
   * - Table in database
   */
  export namespace users {
    export type Table = 'users';
    export interface Selectable {
      /**
      * **users.avatar**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      avatar: string | null;
      /**
      * **users.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **users.dashboard_options**
      * - `json` in database
      * - Nullable, no default
      */
      dashboard_options: db.JSONValue | null;
      /**
      * **users.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email: string | null;
      /**
      * **users.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility: boolean | null;
      /**
      * **users.favorite**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      favorite: string | null;
      /**
      * **users.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **users.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock: boolean | null;
      /**
      * **users.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **users.notification**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notification: string | null;
      /**
      * **users.password**
      * - `text` in database
      * - Nullable, no default
      */
      password: string | null;
      /**
      * **users.password_changed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      password_changed: boolean | null;
      /**
      * **users.phonenumber**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phonenumber: string | null;
      /**
      * **users.roles**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      roles: db.JSONValue | null;
      /**
      * **users.team**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      team: string | null;
      /**
      * **users.tokenkey**
      * - `text` in database
      * - Nullable, no default
      */
      tokenkey: string | null;
      /**
      * **users.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **users.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **users.username**
      * - `text` in database
      * - Nullable, no default
      */
      username: string | null;
      /**
      * **users.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified: boolean | null;
      /**
      * **users.view_all**
      * - `json` in database
      * - Nullable, no default
      */
      view_all: db.JSONValue | null;
    }
    export interface JSONSelectable {
      /**
      * **users.avatar**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      avatar: string | null;
      /**
      * **users.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **users.dashboard_options**
      * - `json` in database
      * - Nullable, no default
      */
      dashboard_options: db.JSONValue | null;
      /**
      * **users.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email: string | null;
      /**
      * **users.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility: boolean | null;
      /**
      * **users.favorite**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      favorite: string | null;
      /**
      * **users.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **users.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock: boolean | null;
      /**
      * **users.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **users.notification**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notification: string | null;
      /**
      * **users.password**
      * - `text` in database
      * - Nullable, no default
      */
      password: string | null;
      /**
      * **users.password_changed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      password_changed: boolean | null;
      /**
      * **users.phonenumber**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phonenumber: string | null;
      /**
      * **users.roles**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      roles: db.JSONValue | null;
      /**
      * **users.team**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      team: string | null;
      /**
      * **users.tokenkey**
      * - `text` in database
      * - Nullable, no default
      */
      tokenkey: string | null;
      /**
      * **users.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type: string | null;
      /**
      * **users.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **users.username**
      * - `text` in database
      * - Nullable, no default
      */
      username: string | null;
      /**
      * **users.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified: boolean | null;
      /**
      * **users.view_all**
      * - `json` in database
      * - Nullable, no default
      */
      view_all: db.JSONValue | null;
    }
    export interface Whereable {
      /**
      * **users.avatar**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      avatar?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.dashboard_options**
      * - `json` in database
      * - Nullable, no default
      */
      dashboard_options?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.favorite**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      favorite?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.notification**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notification?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.password_changed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      password_changed?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.phonenumber**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phonenumber?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.roles**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      roles?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.team**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      team?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.tokenkey**
      * - `text` in database
      * - Nullable, no default
      */
      tokenkey?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.username**
      * - `text` in database
      * - Nullable, no default
      */
      username?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **users.view_all**
      * - `json` in database
      * - Nullable, no default
      */
      view_all?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **users.avatar**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      avatar?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.dashboard_options**
      * - `json` in database
      * - Nullable, no default
      */
      dashboard_options?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.favorite**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      favorite?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **users.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.notification**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notification?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.password_changed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      password_changed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.phonenumber**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phonenumber?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.roles**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      roles?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.team**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      team?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.tokenkey**
      * - `text` in database
      * - Nullable, no default
      */
      tokenkey?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.username**
      * - `text` in database
      * - Nullable, no default
      */
      username?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **users.view_all**
      * - `json` in database
      * - Nullable, no default
      */
      view_all?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **users.avatar**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      avatar?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.dashboard_options**
      * - `json` in database
      * - Nullable, no default
      */
      dashboard_options?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.email**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      email?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.emailvisibility**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      emailvisibility?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.favorite**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      favorite?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **users.lock**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      lock?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.notification**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      notification?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.password**
      * - `text` in database
      * - Nullable, no default
      */
      password?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.password_changed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      password_changed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.phonenumber**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      phonenumber?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.roles**
      * - `json` in database
      * - Nullable, default: `'[]'::json`
      */
      roles?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.team**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      team?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.tokenkey**
      * - `text` in database
      * - Nullable, no default
      */
      tokenkey?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.type**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.username**
      * - `text` in database
      * - Nullable, no default
      */
      username?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.verified**
      * - `bool` in database
      * - Nullable, default: `false`
      */
      verified?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **users.view_all**
      * - `json` in database
      * - Nullable, no default
      */
      view_all?: db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = '__pb_users_auth__email_idx' | '__pb_users_auth__tokenkey_idx' | '__pb_users_auth__username_idx' | 'idx_489220___pb_users_auth__email_idx' | 'idx_489220___pb_users_auth__tokenkey_idx' | 'idx_489220___pb_users_auth__username_idx' | 'idx_489220_sqlite_autoindex_users_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **verification**
   * - Table in database
   */
  export namespace verification {
    export type Table = 'verification';
    export interface Selectable {
      /**
      * **verification.createdAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      createdAt: Date | null;
      /**
      * **verification.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: Date;
      /**
      * **verification.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **verification.identifier**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      identifier: string;
      /**
      * **verification.updatedAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      updatedAt: Date | null;
      /**
      * **verification.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string;
    }
    export interface JSONSelectable {
      /**
      * **verification.createdAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      createdAt: db.TimestampString | null;
      /**
      * **verification.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: db.TimestampString;
      /**
      * **verification.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **verification.identifier**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      identifier: string;
      /**
      * **verification.updatedAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      updatedAt: db.TimestampString | null;
      /**
      * **verification.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string;
    }
    export interface Whereable {
      /**
      * **verification.createdAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **verification.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **verification.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **verification.identifier**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      identifier?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **verification.updatedAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **verification.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **verification.createdAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **verification.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **verification.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **verification.identifier**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      identifier: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **verification.updatedAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **verification.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **verification.createdAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      createdAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **verification.expiresAt**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      expiresAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **verification.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **verification.identifier**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      identifier?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **verification.updatedAt**
      * - `timestamp` in database
      * - Nullable, no default
      */
      updatedAt?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **verification.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'verification_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **videos**
   * - Table in database
   */
  export namespace videos {
    export type Table = 'videos';
    export interface Selectable {
      /**
      * **videos.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **videos.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **videos.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **videos.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **videos.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **videos.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **videos.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **videos.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface JSONSelectable {
      /**
      * **videos.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account: string | null;
      /**
      * **videos.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **videos.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by: string | null;
      /**
      * **videos.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file: string | null;
      /**
      * **videos.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **videos.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name: string | null;
      /**
      * **videos.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
      /**
      * **videos.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url: string | null;
    }
    export interface Whereable {
      /**
      * **videos.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **videos.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **videos.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **videos.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **videos.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **videos.account**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      account?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.created_by**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      created_by?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.file**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.name**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **videos.url**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      url?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489252_sqlite_autoindex_videos_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **wav_files**
   * - Table in database
   */
  export namespace wav_files {
    export type Table = 'wav_files';
    export interface Selectable {
      /**
      * **wav_files.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **wav_files.field**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      field: string | null;
      /**
      * **wav_files.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **wav_files.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface JSONSelectable {
      /**
      * **wav_files.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created: string | null;
      /**
      * **wav_files.field**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      field: string | null;
      /**
      * **wav_files.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id: string;
      /**
      * **wav_files.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated: string | null;
    }
    export interface Whereable {
      /**
      * **wav_files.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **wav_files.field**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      field?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **wav_files.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **wav_files.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **wav_files.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **wav_files.field**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      field?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **wav_files.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **wav_files.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **wav_files.created**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      created?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **wav_files.field**
      * - `text` in database
      * - Nullable, default: `''::text`
      */
      field?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **wav_files.id**
      * - `text` in database
      * - `NOT NULL`, default: `'''r''||lower(hex(randomblob(7)))'::text`
      */
      id?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **wav_files.updated**
      * - `text` in database
      * - Nullable, default: `'strftime(''%Y-%m-%d %H:%M:%fZ'')'::text`
      */
      updated?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_489270_sqlite_autoindex_wav_files_1';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /* --- aggregate types --- */

  export namespace public {  
    export type Table = _authorigins.Table | _collections.Table | _externalauths.Table | _litestream_lock.Table | _litestream_seq.Table | _mfas.Table | _migrations.Table | _otps.Table | _params.Table | _superusers.Table | account.Table | account_limit_history.Table | accounts.Table | api_settings.Table | audios.Table | automation_templates.Table | automations.Table | campaigns.Table | catalogs.Table | conversation_campaign.Table | conversations.Table | country.Table | documents.Table | images.Table | interactive_messages.Table | invoice.Table | leads.Table | leads_replied_campaign.Table | list_filters.Table | lists.Table | logs.Table | message_logs.Table | messages.Table | messaging_limit.Table | office_settings.Table | packages_tier.Table | payment.Table | pending_contacts.Table | pending_logs.Table | pricing.Table | roles.Table | saved_messages.Table | session.Table | shopify_accounts.Table | shopify_orders.Table | sqlite_stat1.Table | sqlite_stat4.Table | teams.Table | templates.Table | third_party.Table | transaction_log.Table | user.Table | user_bank_session.Table | users.Table | verification.Table | videos.Table | wav_files.Table;
    export type Selectable = _authorigins.Selectable | _collections.Selectable | _externalauths.Selectable | _litestream_lock.Selectable | _litestream_seq.Selectable | _mfas.Selectable | _migrations.Selectable | _otps.Selectable | _params.Selectable | _superusers.Selectable | account.Selectable | account_limit_history.Selectable | accounts.Selectable | api_settings.Selectable | audios.Selectable | automation_templates.Selectable | automations.Selectable | campaigns.Selectable | catalogs.Selectable | conversation_campaign.Selectable | conversations.Selectable | country.Selectable | documents.Selectable | images.Selectable | interactive_messages.Selectable | invoice.Selectable | leads.Selectable | leads_replied_campaign.Selectable | list_filters.Selectable | lists.Selectable | logs.Selectable | message_logs.Selectable | messages.Selectable | messaging_limit.Selectable | office_settings.Selectable | packages_tier.Selectable | payment.Selectable | pending_contacts.Selectable | pending_logs.Selectable | pricing.Selectable | roles.Selectable | saved_messages.Selectable | session.Selectable | shopify_accounts.Selectable | shopify_orders.Selectable | sqlite_stat1.Selectable | sqlite_stat4.Selectable | teams.Selectable | templates.Selectable | third_party.Selectable | transaction_log.Selectable | user.Selectable | user_bank_session.Selectable | users.Selectable | verification.Selectable | videos.Selectable | wav_files.Selectable;
    export type JSONSelectable = _authorigins.JSONSelectable | _collections.JSONSelectable | _externalauths.JSONSelectable | _litestream_lock.JSONSelectable | _litestream_seq.JSONSelectable | _mfas.JSONSelectable | _migrations.JSONSelectable | _otps.JSONSelectable | _params.JSONSelectable | _superusers.JSONSelectable | account.JSONSelectable | account_limit_history.JSONSelectable | accounts.JSONSelectable | api_settings.JSONSelectable | audios.JSONSelectable | automation_templates.JSONSelectable | automations.JSONSelectable | campaigns.JSONSelectable | catalogs.JSONSelectable | conversation_campaign.JSONSelectable | conversations.JSONSelectable | country.JSONSelectable | documents.JSONSelectable | images.JSONSelectable | interactive_messages.JSONSelectable | invoice.JSONSelectable | leads.JSONSelectable | leads_replied_campaign.JSONSelectable | list_filters.JSONSelectable | lists.JSONSelectable | logs.JSONSelectable | message_logs.JSONSelectable | messages.JSONSelectable | messaging_limit.JSONSelectable | office_settings.JSONSelectable | packages_tier.JSONSelectable | payment.JSONSelectable | pending_contacts.JSONSelectable | pending_logs.JSONSelectable | pricing.JSONSelectable | roles.JSONSelectable | saved_messages.JSONSelectable | session.JSONSelectable | shopify_accounts.JSONSelectable | shopify_orders.JSONSelectable | sqlite_stat1.JSONSelectable | sqlite_stat4.JSONSelectable | teams.JSONSelectable | templates.JSONSelectable | third_party.JSONSelectable | transaction_log.JSONSelectable | user.JSONSelectable | user_bank_session.JSONSelectable | users.JSONSelectable | verification.JSONSelectable | videos.JSONSelectable | wav_files.JSONSelectable;
    export type Whereable = _authorigins.Whereable | _collections.Whereable | _externalauths.Whereable | _litestream_lock.Whereable | _litestream_seq.Whereable | _mfas.Whereable | _migrations.Whereable | _otps.Whereable | _params.Whereable | _superusers.Whereable | account.Whereable | account_limit_history.Whereable | accounts.Whereable | api_settings.Whereable | audios.Whereable | automation_templates.Whereable | automations.Whereable | campaigns.Whereable | catalogs.Whereable | conversation_campaign.Whereable | conversations.Whereable | country.Whereable | documents.Whereable | images.Whereable | interactive_messages.Whereable | invoice.Whereable | leads.Whereable | leads_replied_campaign.Whereable | list_filters.Whereable | lists.Whereable | logs.Whereable | message_logs.Whereable | messages.Whereable | messaging_limit.Whereable | office_settings.Whereable | packages_tier.Whereable | payment.Whereable | pending_contacts.Whereable | pending_logs.Whereable | pricing.Whereable | roles.Whereable | saved_messages.Whereable | session.Whereable | shopify_accounts.Whereable | shopify_orders.Whereable | sqlite_stat1.Whereable | sqlite_stat4.Whereable | teams.Whereable | templates.Whereable | third_party.Whereable | transaction_log.Whereable | user.Whereable | user_bank_session.Whereable | users.Whereable | verification.Whereable | videos.Whereable | wav_files.Whereable;
    export type Insertable = _authorigins.Insertable | _collections.Insertable | _externalauths.Insertable | _litestream_lock.Insertable | _litestream_seq.Insertable | _mfas.Insertable | _migrations.Insertable | _otps.Insertable | _params.Insertable | _superusers.Insertable | account.Insertable | account_limit_history.Insertable | accounts.Insertable | api_settings.Insertable | audios.Insertable | automation_templates.Insertable | automations.Insertable | campaigns.Insertable | catalogs.Insertable | conversation_campaign.Insertable | conversations.Insertable | country.Insertable | documents.Insertable | images.Insertable | interactive_messages.Insertable | invoice.Insertable | leads.Insertable | leads_replied_campaign.Insertable | list_filters.Insertable | lists.Insertable | logs.Insertable | message_logs.Insertable | messages.Insertable | messaging_limit.Insertable | office_settings.Insertable | packages_tier.Insertable | payment.Insertable | pending_contacts.Insertable | pending_logs.Insertable | pricing.Insertable | roles.Insertable | saved_messages.Insertable | session.Insertable | shopify_accounts.Insertable | shopify_orders.Insertable | sqlite_stat1.Insertable | sqlite_stat4.Insertable | teams.Insertable | templates.Insertable | third_party.Insertable | transaction_log.Insertable | user.Insertable | user_bank_session.Insertable | users.Insertable | verification.Insertable | videos.Insertable | wav_files.Insertable;
    export type Updatable = _authorigins.Updatable | _collections.Updatable | _externalauths.Updatable | _litestream_lock.Updatable | _litestream_seq.Updatable | _mfas.Updatable | _migrations.Updatable | _otps.Updatable | _params.Updatable | _superusers.Updatable | account.Updatable | account_limit_history.Updatable | accounts.Updatable | api_settings.Updatable | audios.Updatable | automation_templates.Updatable | automations.Updatable | campaigns.Updatable | catalogs.Updatable | conversation_campaign.Updatable | conversations.Updatable | country.Updatable | documents.Updatable | images.Updatable | interactive_messages.Updatable | invoice.Updatable | leads.Updatable | leads_replied_campaign.Updatable | list_filters.Updatable | lists.Updatable | logs.Updatable | message_logs.Updatable | messages.Updatable | messaging_limit.Updatable | office_settings.Updatable | packages_tier.Updatable | payment.Updatable | pending_contacts.Updatable | pending_logs.Updatable | pricing.Updatable | roles.Updatable | saved_messages.Updatable | session.Updatable | shopify_accounts.Updatable | shopify_orders.Updatable | sqlite_stat1.Updatable | sqlite_stat4.Updatable | teams.Updatable | templates.Updatable | third_party.Updatable | transaction_log.Updatable | user.Updatable | user_bank_session.Updatable | users.Updatable | verification.Updatable | videos.Updatable | wav_files.Updatable;
    export type UniqueIndex = _authorigins.UniqueIndex | _collections.UniqueIndex | _externalauths.UniqueIndex | _litestream_lock.UniqueIndex | _litestream_seq.UniqueIndex | _mfas.UniqueIndex | _migrations.UniqueIndex | _otps.UniqueIndex | _params.UniqueIndex | _superusers.UniqueIndex | account.UniqueIndex | account_limit_history.UniqueIndex | accounts.UniqueIndex | api_settings.UniqueIndex | audios.UniqueIndex | automation_templates.UniqueIndex | automations.UniqueIndex | campaigns.UniqueIndex | catalogs.UniqueIndex | conversation_campaign.UniqueIndex | conversations.UniqueIndex | country.UniqueIndex | documents.UniqueIndex | images.UniqueIndex | interactive_messages.UniqueIndex | invoice.UniqueIndex | leads.UniqueIndex | leads_replied_campaign.UniqueIndex | list_filters.UniqueIndex | lists.UniqueIndex | logs.UniqueIndex | message_logs.UniqueIndex | messages.UniqueIndex | messaging_limit.UniqueIndex | office_settings.UniqueIndex | packages_tier.UniqueIndex | payment.UniqueIndex | pending_contacts.UniqueIndex | pending_logs.UniqueIndex | pricing.UniqueIndex | roles.UniqueIndex | saved_messages.UniqueIndex | session.UniqueIndex | shopify_accounts.UniqueIndex | shopify_orders.UniqueIndex | sqlite_stat1.UniqueIndex | sqlite_stat4.UniqueIndex | teams.UniqueIndex | templates.UniqueIndex | third_party.UniqueIndex | transaction_log.UniqueIndex | user.UniqueIndex | user_bank_session.UniqueIndex | users.UniqueIndex | verification.UniqueIndex | videos.UniqueIndex | wav_files.UniqueIndex;
    export type Column = _authorigins.Column | _collections.Column | _externalauths.Column | _litestream_lock.Column | _litestream_seq.Column | _mfas.Column | _migrations.Column | _otps.Column | _params.Column | _superusers.Column | account.Column | account_limit_history.Column | accounts.Column | api_settings.Column | audios.Column | automation_templates.Column | automations.Column | campaigns.Column | catalogs.Column | conversation_campaign.Column | conversations.Column | country.Column | documents.Column | images.Column | interactive_messages.Column | invoice.Column | leads.Column | leads_replied_campaign.Column | list_filters.Column | lists.Column | logs.Column | message_logs.Column | messages.Column | messaging_limit.Column | office_settings.Column | packages_tier.Column | payment.Column | pending_contacts.Column | pending_logs.Column | pricing.Column | roles.Column | saved_messages.Column | session.Column | shopify_accounts.Column | shopify_orders.Column | sqlite_stat1.Column | sqlite_stat4.Column | teams.Column | templates.Column | third_party.Column | transaction_log.Column | user.Column | user_bank_session.Column | users.Column | verification.Column | videos.Column | wav_files.Column;
  
    export type AllBaseTables = [_authorigins.Table, _collections.Table, _externalauths.Table, _litestream_lock.Table, _litestream_seq.Table, _mfas.Table, _migrations.Table, _otps.Table, _params.Table, _superusers.Table, account.Table, account_limit_history.Table, accounts.Table, api_settings.Table, audios.Table, automation_templates.Table, automations.Table, campaigns.Table, catalogs.Table, conversation_campaign.Table, conversations.Table, country.Table, documents.Table, images.Table, interactive_messages.Table, invoice.Table, leads.Table, leads_replied_campaign.Table, list_filters.Table, lists.Table, logs.Table, message_logs.Table, messages.Table, messaging_limit.Table, office_settings.Table, packages_tier.Table, payment.Table, pending_contacts.Table, pending_logs.Table, pricing.Table, roles.Table, saved_messages.Table, session.Table, shopify_accounts.Table, shopify_orders.Table, sqlite_stat1.Table, sqlite_stat4.Table, teams.Table, templates.Table, third_party.Table, transaction_log.Table, user.Table, user_bank_session.Table, users.Table, verification.Table, videos.Table, wav_files.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [_authorigins.Table, _collections.Table, _externalauths.Table, _litestream_lock.Table, _litestream_seq.Table, _mfas.Table, _migrations.Table, _otps.Table, _params.Table, _superusers.Table, account.Table, account_limit_history.Table, accounts.Table, api_settings.Table, audios.Table, automation_templates.Table, automations.Table, campaigns.Table, catalogs.Table, conversation_campaign.Table, conversations.Table, country.Table, documents.Table, images.Table, interactive_messages.Table, invoice.Table, leads.Table, leads_replied_campaign.Table, list_filters.Table, lists.Table, logs.Table, message_logs.Table, messages.Table, messaging_limit.Table, office_settings.Table, packages_tier.Table, payment.Table, pending_contacts.Table, pending_logs.Table, pricing.Table, roles.Table, saved_messages.Table, session.Table, shopify_accounts.Table, shopify_orders.Table, sqlite_stat1.Table, sqlite_stat4.Table, teams.Table, templates.Table, third_party.Table, transaction_log.Table, user.Table, user_bank_session.Table, users.Table, verification.Table, videos.Table, wav_files.Table];
  }



  /* === global aggregate types === */

  export type Schema = 'public';
  export type Table = public.Table;
  export type Selectable = public.Selectable;
  export type JSONSelectable = public.JSONSelectable;
  export type Whereable = public.Whereable;
  export type Insertable = public.Insertable;
  export type Updatable = public.Updatable;
  export type UniqueIndex = public.UniqueIndex;
  export type Column = public.Column;

  export type AllSchemas = ['public'];
  export type AllBaseTables = [...public.AllBaseTables];
  export type AllForeignTables = [...public.AllForeignTables];
  export type AllViews = [...public.AllViews];
  export type AllMaterializedViews = [...public.AllMaterializedViews];
  export type AllTablesAndViews = [...public.AllTablesAndViews];


  /* === lookups === */

  export type SelectableForTable<T extends Table> = {
    "_authorigins": _authorigins.Selectable;
    "_collections": _collections.Selectable;
    "_externalauths": _externalauths.Selectable;
    "_litestream_lock": _litestream_lock.Selectable;
    "_litestream_seq": _litestream_seq.Selectable;
    "_mfas": _mfas.Selectable;
    "_migrations": _migrations.Selectable;
    "_otps": _otps.Selectable;
    "_params": _params.Selectable;
    "_superusers": _superusers.Selectable;
    "account": account.Selectable;
    "account_limit_history": account_limit_history.Selectable;
    "accounts": accounts.Selectable;
    "api_settings": api_settings.Selectable;
    "audios": audios.Selectable;
    "automation_templates": automation_templates.Selectable;
    "automations": automations.Selectable;
    "campaigns": campaigns.Selectable;
    "catalogs": catalogs.Selectable;
    "conversation_campaign": conversation_campaign.Selectable;
    "conversations": conversations.Selectable;
    "country": country.Selectable;
    "documents": documents.Selectable;
    "images": images.Selectable;
    "interactive_messages": interactive_messages.Selectable;
    "invoice": invoice.Selectable;
    "leads": leads.Selectable;
    "leads_replied_campaign": leads_replied_campaign.Selectable;
    "list_filters": list_filters.Selectable;
    "lists": lists.Selectable;
    "logs": logs.Selectable;
    "message_logs": message_logs.Selectable;
    "messages": messages.Selectable;
    "messaging_limit": messaging_limit.Selectable;
    "office_settings": office_settings.Selectable;
    "packages_tier": packages_tier.Selectable;
    "payment": payment.Selectable;
    "pending_contacts": pending_contacts.Selectable;
    "pending_logs": pending_logs.Selectable;
    "pricing": pricing.Selectable;
    "roles": roles.Selectable;
    "saved_messages": saved_messages.Selectable;
    "session": session.Selectable;
    "shopify_accounts": shopify_accounts.Selectable;
    "shopify_orders": shopify_orders.Selectable;
    "sqlite_stat1": sqlite_stat1.Selectable;
    "sqlite_stat4": sqlite_stat4.Selectable;
    "teams": teams.Selectable;
    "templates": templates.Selectable;
    "third_party": third_party.Selectable;
    "transaction_log": transaction_log.Selectable;
    "user": user.Selectable;
    "user_bank_session": user_bank_session.Selectable;
    "users": users.Selectable;
    "verification": verification.Selectable;
    "videos": videos.Selectable;
    "wav_files": wav_files.Selectable;
  }[T];

  export type JSONSelectableForTable<T extends Table> = {
    "_authorigins": _authorigins.JSONSelectable;
    "_collections": _collections.JSONSelectable;
    "_externalauths": _externalauths.JSONSelectable;
    "_litestream_lock": _litestream_lock.JSONSelectable;
    "_litestream_seq": _litestream_seq.JSONSelectable;
    "_mfas": _mfas.JSONSelectable;
    "_migrations": _migrations.JSONSelectable;
    "_otps": _otps.JSONSelectable;
    "_params": _params.JSONSelectable;
    "_superusers": _superusers.JSONSelectable;
    "account": account.JSONSelectable;
    "account_limit_history": account_limit_history.JSONSelectable;
    "accounts": accounts.JSONSelectable;
    "api_settings": api_settings.JSONSelectable;
    "audios": audios.JSONSelectable;
    "automation_templates": automation_templates.JSONSelectable;
    "automations": automations.JSONSelectable;
    "campaigns": campaigns.JSONSelectable;
    "catalogs": catalogs.JSONSelectable;
    "conversation_campaign": conversation_campaign.JSONSelectable;
    "conversations": conversations.JSONSelectable;
    "country": country.JSONSelectable;
    "documents": documents.JSONSelectable;
    "images": images.JSONSelectable;
    "interactive_messages": interactive_messages.JSONSelectable;
    "invoice": invoice.JSONSelectable;
    "leads": leads.JSONSelectable;
    "leads_replied_campaign": leads_replied_campaign.JSONSelectable;
    "list_filters": list_filters.JSONSelectable;
    "lists": lists.JSONSelectable;
    "logs": logs.JSONSelectable;
    "message_logs": message_logs.JSONSelectable;
    "messages": messages.JSONSelectable;
    "messaging_limit": messaging_limit.JSONSelectable;
    "office_settings": office_settings.JSONSelectable;
    "packages_tier": packages_tier.JSONSelectable;
    "payment": payment.JSONSelectable;
    "pending_contacts": pending_contacts.JSONSelectable;
    "pending_logs": pending_logs.JSONSelectable;
    "pricing": pricing.JSONSelectable;
    "roles": roles.JSONSelectable;
    "saved_messages": saved_messages.JSONSelectable;
    "session": session.JSONSelectable;
    "shopify_accounts": shopify_accounts.JSONSelectable;
    "shopify_orders": shopify_orders.JSONSelectable;
    "sqlite_stat1": sqlite_stat1.JSONSelectable;
    "sqlite_stat4": sqlite_stat4.JSONSelectable;
    "teams": teams.JSONSelectable;
    "templates": templates.JSONSelectable;
    "third_party": third_party.JSONSelectable;
    "transaction_log": transaction_log.JSONSelectable;
    "user": user.JSONSelectable;
    "user_bank_session": user_bank_session.JSONSelectable;
    "users": users.JSONSelectable;
    "verification": verification.JSONSelectable;
    "videos": videos.JSONSelectable;
    "wav_files": wav_files.JSONSelectable;
  }[T];

  export type WhereableForTable<T extends Table> = {
    "_authorigins": _authorigins.Whereable;
    "_collections": _collections.Whereable;
    "_externalauths": _externalauths.Whereable;
    "_litestream_lock": _litestream_lock.Whereable;
    "_litestream_seq": _litestream_seq.Whereable;
    "_mfas": _mfas.Whereable;
    "_migrations": _migrations.Whereable;
    "_otps": _otps.Whereable;
    "_params": _params.Whereable;
    "_superusers": _superusers.Whereable;
    "account": account.Whereable;
    "account_limit_history": account_limit_history.Whereable;
    "accounts": accounts.Whereable;
    "api_settings": api_settings.Whereable;
    "audios": audios.Whereable;
    "automation_templates": automation_templates.Whereable;
    "automations": automations.Whereable;
    "campaigns": campaigns.Whereable;
    "catalogs": catalogs.Whereable;
    "conversation_campaign": conversation_campaign.Whereable;
    "conversations": conversations.Whereable;
    "country": country.Whereable;
    "documents": documents.Whereable;
    "images": images.Whereable;
    "interactive_messages": interactive_messages.Whereable;
    "invoice": invoice.Whereable;
    "leads": leads.Whereable;
    "leads_replied_campaign": leads_replied_campaign.Whereable;
    "list_filters": list_filters.Whereable;
    "lists": lists.Whereable;
    "logs": logs.Whereable;
    "message_logs": message_logs.Whereable;
    "messages": messages.Whereable;
    "messaging_limit": messaging_limit.Whereable;
    "office_settings": office_settings.Whereable;
    "packages_tier": packages_tier.Whereable;
    "payment": payment.Whereable;
    "pending_contacts": pending_contacts.Whereable;
    "pending_logs": pending_logs.Whereable;
    "pricing": pricing.Whereable;
    "roles": roles.Whereable;
    "saved_messages": saved_messages.Whereable;
    "session": session.Whereable;
    "shopify_accounts": shopify_accounts.Whereable;
    "shopify_orders": shopify_orders.Whereable;
    "sqlite_stat1": sqlite_stat1.Whereable;
    "sqlite_stat4": sqlite_stat4.Whereable;
    "teams": teams.Whereable;
    "templates": templates.Whereable;
    "third_party": third_party.Whereable;
    "transaction_log": transaction_log.Whereable;
    "user": user.Whereable;
    "user_bank_session": user_bank_session.Whereable;
    "users": users.Whereable;
    "verification": verification.Whereable;
    "videos": videos.Whereable;
    "wav_files": wav_files.Whereable;
  }[T];

  export type InsertableForTable<T extends Table> = {
    "_authorigins": _authorigins.Insertable;
    "_collections": _collections.Insertable;
    "_externalauths": _externalauths.Insertable;
    "_litestream_lock": _litestream_lock.Insertable;
    "_litestream_seq": _litestream_seq.Insertable;
    "_mfas": _mfas.Insertable;
    "_migrations": _migrations.Insertable;
    "_otps": _otps.Insertable;
    "_params": _params.Insertable;
    "_superusers": _superusers.Insertable;
    "account": account.Insertable;
    "account_limit_history": account_limit_history.Insertable;
    "accounts": accounts.Insertable;
    "api_settings": api_settings.Insertable;
    "audios": audios.Insertable;
    "automation_templates": automation_templates.Insertable;
    "automations": automations.Insertable;
    "campaigns": campaigns.Insertable;
    "catalogs": catalogs.Insertable;
    "conversation_campaign": conversation_campaign.Insertable;
    "conversations": conversations.Insertable;
    "country": country.Insertable;
    "documents": documents.Insertable;
    "images": images.Insertable;
    "interactive_messages": interactive_messages.Insertable;
    "invoice": invoice.Insertable;
    "leads": leads.Insertable;
    "leads_replied_campaign": leads_replied_campaign.Insertable;
    "list_filters": list_filters.Insertable;
    "lists": lists.Insertable;
    "logs": logs.Insertable;
    "message_logs": message_logs.Insertable;
    "messages": messages.Insertable;
    "messaging_limit": messaging_limit.Insertable;
    "office_settings": office_settings.Insertable;
    "packages_tier": packages_tier.Insertable;
    "payment": payment.Insertable;
    "pending_contacts": pending_contacts.Insertable;
    "pending_logs": pending_logs.Insertable;
    "pricing": pricing.Insertable;
    "roles": roles.Insertable;
    "saved_messages": saved_messages.Insertable;
    "session": session.Insertable;
    "shopify_accounts": shopify_accounts.Insertable;
    "shopify_orders": shopify_orders.Insertable;
    "sqlite_stat1": sqlite_stat1.Insertable;
    "sqlite_stat4": sqlite_stat4.Insertable;
    "teams": teams.Insertable;
    "templates": templates.Insertable;
    "third_party": third_party.Insertable;
    "transaction_log": transaction_log.Insertable;
    "user": user.Insertable;
    "user_bank_session": user_bank_session.Insertable;
    "users": users.Insertable;
    "verification": verification.Insertable;
    "videos": videos.Insertable;
    "wav_files": wav_files.Insertable;
  }[T];

  export type UpdatableForTable<T extends Table> = {
    "_authorigins": _authorigins.Updatable;
    "_collections": _collections.Updatable;
    "_externalauths": _externalauths.Updatable;
    "_litestream_lock": _litestream_lock.Updatable;
    "_litestream_seq": _litestream_seq.Updatable;
    "_mfas": _mfas.Updatable;
    "_migrations": _migrations.Updatable;
    "_otps": _otps.Updatable;
    "_params": _params.Updatable;
    "_superusers": _superusers.Updatable;
    "account": account.Updatable;
    "account_limit_history": account_limit_history.Updatable;
    "accounts": accounts.Updatable;
    "api_settings": api_settings.Updatable;
    "audios": audios.Updatable;
    "automation_templates": automation_templates.Updatable;
    "automations": automations.Updatable;
    "campaigns": campaigns.Updatable;
    "catalogs": catalogs.Updatable;
    "conversation_campaign": conversation_campaign.Updatable;
    "conversations": conversations.Updatable;
    "country": country.Updatable;
    "documents": documents.Updatable;
    "images": images.Updatable;
    "interactive_messages": interactive_messages.Updatable;
    "invoice": invoice.Updatable;
    "leads": leads.Updatable;
    "leads_replied_campaign": leads_replied_campaign.Updatable;
    "list_filters": list_filters.Updatable;
    "lists": lists.Updatable;
    "logs": logs.Updatable;
    "message_logs": message_logs.Updatable;
    "messages": messages.Updatable;
    "messaging_limit": messaging_limit.Updatable;
    "office_settings": office_settings.Updatable;
    "packages_tier": packages_tier.Updatable;
    "payment": payment.Updatable;
    "pending_contacts": pending_contacts.Updatable;
    "pending_logs": pending_logs.Updatable;
    "pricing": pricing.Updatable;
    "roles": roles.Updatable;
    "saved_messages": saved_messages.Updatable;
    "session": session.Updatable;
    "shopify_accounts": shopify_accounts.Updatable;
    "shopify_orders": shopify_orders.Updatable;
    "sqlite_stat1": sqlite_stat1.Updatable;
    "sqlite_stat4": sqlite_stat4.Updatable;
    "teams": teams.Updatable;
    "templates": templates.Updatable;
    "third_party": third_party.Updatable;
    "transaction_log": transaction_log.Updatable;
    "user": user.Updatable;
    "user_bank_session": user_bank_session.Updatable;
    "users": users.Updatable;
    "verification": verification.Updatable;
    "videos": videos.Updatable;
    "wav_files": wav_files.Updatable;
  }[T];

  export type UniqueIndexForTable<T extends Table> = {
    "_authorigins": _authorigins.UniqueIndex;
    "_collections": _collections.UniqueIndex;
    "_externalauths": _externalauths.UniqueIndex;
    "_litestream_lock": _litestream_lock.UniqueIndex;
    "_litestream_seq": _litestream_seq.UniqueIndex;
    "_mfas": _mfas.UniqueIndex;
    "_migrations": _migrations.UniqueIndex;
    "_otps": _otps.UniqueIndex;
    "_params": _params.UniqueIndex;
    "_superusers": _superusers.UniqueIndex;
    "account": account.UniqueIndex;
    "account_limit_history": account_limit_history.UniqueIndex;
    "accounts": accounts.UniqueIndex;
    "api_settings": api_settings.UniqueIndex;
    "audios": audios.UniqueIndex;
    "automation_templates": automation_templates.UniqueIndex;
    "automations": automations.UniqueIndex;
    "campaigns": campaigns.UniqueIndex;
    "catalogs": catalogs.UniqueIndex;
    "conversation_campaign": conversation_campaign.UniqueIndex;
    "conversations": conversations.UniqueIndex;
    "country": country.UniqueIndex;
    "documents": documents.UniqueIndex;
    "images": images.UniqueIndex;
    "interactive_messages": interactive_messages.UniqueIndex;
    "invoice": invoice.UniqueIndex;
    "leads": leads.UniqueIndex;
    "leads_replied_campaign": leads_replied_campaign.UniqueIndex;
    "list_filters": list_filters.UniqueIndex;
    "lists": lists.UniqueIndex;
    "logs": logs.UniqueIndex;
    "message_logs": message_logs.UniqueIndex;
    "messages": messages.UniqueIndex;
    "messaging_limit": messaging_limit.UniqueIndex;
    "office_settings": office_settings.UniqueIndex;
    "packages_tier": packages_tier.UniqueIndex;
    "payment": payment.UniqueIndex;
    "pending_contacts": pending_contacts.UniqueIndex;
    "pending_logs": pending_logs.UniqueIndex;
    "pricing": pricing.UniqueIndex;
    "roles": roles.UniqueIndex;
    "saved_messages": saved_messages.UniqueIndex;
    "session": session.UniqueIndex;
    "shopify_accounts": shopify_accounts.UniqueIndex;
    "shopify_orders": shopify_orders.UniqueIndex;
    "sqlite_stat1": sqlite_stat1.UniqueIndex;
    "sqlite_stat4": sqlite_stat4.UniqueIndex;
    "teams": teams.UniqueIndex;
    "templates": templates.UniqueIndex;
    "third_party": third_party.UniqueIndex;
    "transaction_log": transaction_log.UniqueIndex;
    "user": user.UniqueIndex;
    "user_bank_session": user_bank_session.UniqueIndex;
    "users": users.UniqueIndex;
    "verification": verification.UniqueIndex;
    "videos": videos.UniqueIndex;
    "wav_files": wav_files.UniqueIndex;
  }[T];

  export type ColumnForTable<T extends Table> = {
    "_authorigins": _authorigins.Column;
    "_collections": _collections.Column;
    "_externalauths": _externalauths.Column;
    "_litestream_lock": _litestream_lock.Column;
    "_litestream_seq": _litestream_seq.Column;
    "_mfas": _mfas.Column;
    "_migrations": _migrations.Column;
    "_otps": _otps.Column;
    "_params": _params.Column;
    "_superusers": _superusers.Column;
    "account": account.Column;
    "account_limit_history": account_limit_history.Column;
    "accounts": accounts.Column;
    "api_settings": api_settings.Column;
    "audios": audios.Column;
    "automation_templates": automation_templates.Column;
    "automations": automations.Column;
    "campaigns": campaigns.Column;
    "catalogs": catalogs.Column;
    "conversation_campaign": conversation_campaign.Column;
    "conversations": conversations.Column;
    "country": country.Column;
    "documents": documents.Column;
    "images": images.Column;
    "interactive_messages": interactive_messages.Column;
    "invoice": invoice.Column;
    "leads": leads.Column;
    "leads_replied_campaign": leads_replied_campaign.Column;
    "list_filters": list_filters.Column;
    "lists": lists.Column;
    "logs": logs.Column;
    "message_logs": message_logs.Column;
    "messages": messages.Column;
    "messaging_limit": messaging_limit.Column;
    "office_settings": office_settings.Column;
    "packages_tier": packages_tier.Column;
    "payment": payment.Column;
    "pending_contacts": pending_contacts.Column;
    "pending_logs": pending_logs.Column;
    "pricing": pricing.Column;
    "roles": roles.Column;
    "saved_messages": saved_messages.Column;
    "session": session.Column;
    "shopify_accounts": shopify_accounts.Column;
    "shopify_orders": shopify_orders.Column;
    "sqlite_stat1": sqlite_stat1.Column;
    "sqlite_stat4": sqlite_stat4.Column;
    "teams": teams.Column;
    "templates": templates.Column;
    "third_party": third_party.Column;
    "transaction_log": transaction_log.Column;
    "user": user.Column;
    "user_bank_session": user_bank_session.Column;
    "users": users.Column;
    "verification": verification.Column;
    "videos": videos.Column;
    "wav_files": wav_files.Column;
  }[T];

  export type SQLForTable<T extends Table> = {
    "_authorigins": _authorigins.SQL;
    "_collections": _collections.SQL;
    "_externalauths": _externalauths.SQL;
    "_litestream_lock": _litestream_lock.SQL;
    "_litestream_seq": _litestream_seq.SQL;
    "_mfas": _mfas.SQL;
    "_migrations": _migrations.SQL;
    "_otps": _otps.SQL;
    "_params": _params.SQL;
    "_superusers": _superusers.SQL;
    "account": account.SQL;
    "account_limit_history": account_limit_history.SQL;
    "accounts": accounts.SQL;
    "api_settings": api_settings.SQL;
    "audios": audios.SQL;
    "automation_templates": automation_templates.SQL;
    "automations": automations.SQL;
    "campaigns": campaigns.SQL;
    "catalogs": catalogs.SQL;
    "conversation_campaign": conversation_campaign.SQL;
    "conversations": conversations.SQL;
    "country": country.SQL;
    "documents": documents.SQL;
    "images": images.SQL;
    "interactive_messages": interactive_messages.SQL;
    "invoice": invoice.SQL;
    "leads": leads.SQL;
    "leads_replied_campaign": leads_replied_campaign.SQL;
    "list_filters": list_filters.SQL;
    "lists": lists.SQL;
    "logs": logs.SQL;
    "message_logs": message_logs.SQL;
    "messages": messages.SQL;
    "messaging_limit": messaging_limit.SQL;
    "office_settings": office_settings.SQL;
    "packages_tier": packages_tier.SQL;
    "payment": payment.SQL;
    "pending_contacts": pending_contacts.SQL;
    "pending_logs": pending_logs.SQL;
    "pricing": pricing.SQL;
    "roles": roles.SQL;
    "saved_messages": saved_messages.SQL;
    "session": session.SQL;
    "shopify_accounts": shopify_accounts.SQL;
    "shopify_orders": shopify_orders.SQL;
    "sqlite_stat1": sqlite_stat1.SQL;
    "sqlite_stat4": sqlite_stat4.SQL;
    "teams": teams.SQL;
    "templates": templates.SQL;
    "third_party": third_party.SQL;
    "transaction_log": transaction_log.SQL;
    "user": user.SQL;
    "user_bank_session": user_bank_session.SQL;
    "users": users.SQL;
    "verification": verification.SQL;
    "videos": videos.SQL;
    "wav_files": wav_files.SQL;
  }[T];

}
